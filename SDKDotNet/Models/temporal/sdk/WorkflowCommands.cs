// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/sdk/core/workflow_commands/workflow_commands.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Coresdk.WorkflowCommands {

  /// <summary>Holder for reflection information generated from temporal/sdk/core/workflow_commands/workflow_commands.proto</summary>
  public static partial class WorkflowCommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for temporal/sdk/core/workflow_commands/workflow_commands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WorkflowCommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjt0ZW1wb3JhbC9zZGsvY29yZS93b3JrZmxvd19jb21tYW5kcy93b3JrZmxv",
            "d19jb21tYW5kcy5wcm90bxIZY29yZXNkay53b3JrZmxvd19jb21tYW5kcxoe",
            "Z29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvGiR0ZW1wb3JhbC9hcGkvY29tbW9uL3YxL21l",
            "c3NhZ2UucHJvdG8aJHRlbXBvcmFsL2FwaS9lbnVtcy92MS93b3JrZmxvdy5w",
            "cm90bxoldGVtcG9yYWwvYXBpL2ZhaWx1cmUvdjEvbWVzc2FnZS5wcm90bxo1",
            "dGVtcG9yYWwvc2RrL2NvcmUvY2hpbGRfd29ya2Zsb3cvY2hpbGRfd29ya2Zs",
            "b3cucHJvdG8aJXRlbXBvcmFsL3Nkay9jb3JlL2NvbW1vbi9jb21tb24ucHJv",
            "dG8i5AwKD1dvcmtmbG93Q29tbWFuZBI8CgtzdGFydF90aW1lchgBIAEoCzIl",
            "LmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuU3RhcnRUaW1lckgAEkgKEXNj",
            "aGVkdWxlX2FjdGl2aXR5GAIgASgLMisuY29yZXNkay53b3JrZmxvd19jb21t",
            "YW5kcy5TY2hlZHVsZUFjdGl2aXR5SAASQgoQcmVzcG9uZF90b19xdWVyeRgD",
            "IAEoCzImLmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuUXVlcnlSZXN1bHRI",
            "ABJTChdyZXF1ZXN0X2NhbmNlbF9hY3Rpdml0eRgEIAEoCzIwLmNvcmVzZGsu",
            "d29ya2Zsb3dfY29tbWFuZHMuUmVxdWVzdENhbmNlbEFjdGl2aXR5SAASPgoM",
            "Y2FuY2VsX3RpbWVyGAUgASgLMiYuY29yZXNkay53b3JrZmxvd19jb21tYW5k",
            "cy5DYW5jZWxUaW1lckgAElsKG2NvbXBsZXRlX3dvcmtmbG93X2V4ZWN1dGlv",
            "bhgGIAEoCzI0LmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuQ29tcGxldGVX",
            "b3JrZmxvd0V4ZWN1dGlvbkgAElMKF2ZhaWxfd29ya2Zsb3dfZXhlY3V0aW9u",
            "GAcgASgLMjAuY29yZXNkay53b3JrZmxvd19jb21tYW5kcy5GYWlsV29ya2Zs",
            "b3dFeGVjdXRpb25IABJnCiJjb250aW51ZV9hc19uZXdfd29ya2Zsb3dfZXhl",
            "Y3V0aW9uGAggASgLMjkuY29yZXNkay53b3JrZmxvd19jb21tYW5kcy5Db250",
            "aW51ZUFzTmV3V29ya2Zsb3dFeGVjdXRpb25IABJXChljYW5jZWxfd29ya2Zs",
            "b3dfZXhlY3V0aW9uGAkgASgLMjIuY29yZXNkay53b3JrZmxvd19jb21tYW5k",
            "cy5DYW5jZWxXb3JrZmxvd0V4ZWN1dGlvbkgAEkUKEHNldF9wYXRjaF9tYXJr",
            "ZXIYCiABKAsyKS5jb3Jlc2RrLndvcmtmbG93X2NvbW1hbmRzLlNldFBhdGNo",
            "TWFya2VySAASYAoec3RhcnRfY2hpbGRfd29ya2Zsb3dfZXhlY3V0aW9uGAsg",
            "ASgLMjYuY29yZXNkay53b3JrZmxvd19jb21tYW5kcy5TdGFydENoaWxkV29y",
            "a2Zsb3dFeGVjdXRpb25IABJ1CiljYW5jZWxfdW5zdGFydGVkX2NoaWxkX3dv",
            "cmtmbG93X2V4ZWN1dGlvbhgMIAEoCzJALmNvcmVzZGsud29ya2Zsb3dfY29t",
            "bWFuZHMuQ2FuY2VsVW5zdGFydGVkQ2hpbGRXb3JrZmxvd0V4ZWN1dGlvbkgA",
            "EncKKnJlcXVlc3RfY2FuY2VsX2V4dGVybmFsX3dvcmtmbG93X2V4ZWN1dGlv",
            "bhgNIAEoCzJBLmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuUmVxdWVzdENh",
            "bmNlbEV4dGVybmFsV29ya2Zsb3dFeGVjdXRpb25IABJoCiJzaWduYWxfZXh0",
            "ZXJuYWxfd29ya2Zsb3dfZXhlY3V0aW9uGA4gASgLMjouY29yZXNkay53b3Jr",
            "Zmxvd19jb21tYW5kcy5TaWduYWxFeHRlcm5hbFdvcmtmbG93RXhlY3V0aW9u",
            "SAASUQoWY2FuY2VsX3NpZ25hbF93b3JrZmxvdxgPIAEoCzIvLmNvcmVzZGsu",
            "d29ya2Zsb3dfY29tbWFuZHMuQ2FuY2VsU2lnbmFsV29ya2Zsb3dIABJTChdz",
            "Y2hlZHVsZV9sb2NhbF9hY3Rpdml0eRgQIAEoCzIwLmNvcmVzZGsud29ya2Zs",
            "b3dfY29tbWFuZHMuU2NoZWR1bGVMb2NhbEFjdGl2aXR5SAASXgodcmVxdWVz",
            "dF9jYW5jZWxfbG9jYWxfYWN0aXZpdHkYESABKAsyNS5jb3Jlc2RrLndvcmtm",
            "bG93X2NvbW1hbmRzLlJlcXVlc3RDYW5jZWxMb2NhbEFjdGl2aXR5SAASZgoh",
            "dXBzZXJ0X3dvcmtmbG93X3NlYXJjaF9hdHRyaWJ1dGVzGBIgASgLMjkuY29y",
            "ZXNkay53b3JrZmxvd19jb21tYW5kcy5VcHNlcnRXb3JrZmxvd1NlYXJjaEF0",
            "dHJpYnV0ZXNIAEIJCgd2YXJpYW50IlMKClN0YXJ0VGltZXISCwoDc2VxGAEg",
            "ASgNEjgKFXN0YXJ0X3RvX2ZpcmVfdGltZW91dBgCIAEoCzIZLmdvb2dsZS5w",
            "cm90b2J1Zi5EdXJhdGlvbiIaCgtDYW5jZWxUaW1lchILCgNzZXEYASABKA0i",
            "2gUKEFNjaGVkdWxlQWN0aXZpdHkSCwoDc2VxGAEgASgNEhMKC2FjdGl2aXR5",
            "X2lkGAIgASgJEhUKDWFjdGl2aXR5X3R5cGUYAyABKAkSEQoJbmFtZXNwYWNl",
            "GAQgASgJEhIKCnRhc2tfcXVldWUYBSABKAkSSQoHaGVhZGVycxgGIAMoCzI4",
            "LmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuU2NoZWR1bGVBY3Rpdml0eS5I",
            "ZWFkZXJzRW50cnkSMgoJYXJndW1lbnRzGAcgAygLMh8udGVtcG9yYWwuYXBp",
            "LmNvbW1vbi52MS5QYXlsb2FkEjwKGXNjaGVkdWxlX3RvX2Nsb3NlX3RpbWVv",
            "dXQYCCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SPAoZc2NoZWR1",
            "bGVfdG9fc3RhcnRfdGltZW91dBgJIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5E",
            "dXJhdGlvbhI5ChZzdGFydF90b19jbG9zZV90aW1lb3V0GAogASgLMhkuZ29v",
            "Z2xlLnByb3RvYnVmLkR1cmF0aW9uEjQKEWhlYXJ0YmVhdF90aW1lb3V0GAsg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEjkKDHJldHJ5X3BvbGlj",
            "eRgMIAEoCzIjLnRlbXBvcmFsLmFwaS5jb21tb24udjEuUmV0cnlQb2xpY3kS",
            "TgoRY2FuY2VsbGF0aW9uX3R5cGUYDSABKA4yMy5jb3Jlc2RrLndvcmtmbG93",
            "X2NvbW1hbmRzLkFjdGl2aXR5Q2FuY2VsbGF0aW9uVHlwZRIeChZkb19ub3Rf",
            "ZWFnZXJseV9leGVjdXRlGA4gASgIGk8KDEhlYWRlcnNFbnRyeRILCgNrZXkY",
            "ASABKAkSLgoFdmFsdWUYAiABKAsyHy50ZW1wb3JhbC5hcGkuY29tbW9uLnYx",
            "LlBheWxvYWQ6AjgBIu4FChVTY2hlZHVsZUxvY2FsQWN0aXZpdHkSCwoDc2Vx",
            "GAEgASgNEhMKC2FjdGl2aXR5X2lkGAIgASgJEhUKDWFjdGl2aXR5X3R5cGUY",
            "AyABKAkSDwoHYXR0ZW1wdBgEIAEoDRI6ChZvcmlnaW5hbF9zY2hlZHVsZV90",
            "aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJOCgdoZWFk",
            "ZXJzGAYgAygLMj0uY29yZXNkay53b3JrZmxvd19jb21tYW5kcy5TY2hlZHVs",
            "ZUxvY2FsQWN0aXZpdHkuSGVhZGVyc0VudHJ5EjIKCWFyZ3VtZW50cxgHIAMo",
            "CzIfLnRlbXBvcmFsLmFwaS5jb21tb24udjEuUGF5bG9hZBI8ChlzY2hlZHVs",
            "ZV90b19jbG9zZV90aW1lb3V0GAggASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uEjwKGXNjaGVkdWxlX3RvX3N0YXJ0X3RpbWVvdXQYCSABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24SOQoWc3RhcnRfdG9fY2xvc2VfdGlt",
            "ZW91dBgKIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI5CgxyZXRy",
            "eV9wb2xpY3kYCyABKAsyIy50ZW1wb3JhbC5hcGkuY29tbW9uLnYxLlJldHJ5",
            "UG9saWN5EjgKFWxvY2FsX3JldHJ5X3RocmVzaG9sZBgMIAEoCzIZLmdvb2ds",
            "ZS5wcm90b2J1Zi5EdXJhdGlvbhJOChFjYW5jZWxsYXRpb25fdHlwZRgNIAEo",
            "DjIzLmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuQWN0aXZpdHlDYW5jZWxs",
            "YXRpb25UeXBlGk8KDEhlYWRlcnNFbnRyeRILCgNrZXkYASABKAkSLgoFdmFs",
            "dWUYAiABKAsyHy50ZW1wb3JhbC5hcGkuY29tbW9uLnYxLlBheWxvYWQ6AjgB",
            "IiQKFVJlcXVlc3RDYW5jZWxBY3Rpdml0eRILCgNzZXEYASABKA0iKQoaUmVx",
            "dWVzdENhbmNlbExvY2FsQWN0aXZpdHkSCwoDc2VxGAEgASgNIpwBCgtRdWVy",
            "eVJlc3VsdBIQCghxdWVyeV9pZBgBIAEoCRI8CglzdWNjZWVkZWQYAiABKAsy",
            "Jy5jb3Jlc2RrLndvcmtmbG93X2NvbW1hbmRzLlF1ZXJ5U3VjY2Vzc0gAEjIK",
            "BmZhaWxlZBgDIAEoCzIgLnRlbXBvcmFsLmFwaS5mYWlsdXJlLnYxLkZhaWx1",
            "cmVIAEIJCgd2YXJpYW50IkEKDFF1ZXJ5U3VjY2VzcxIxCghyZXNwb25zZRgB",
            "IAEoCzIfLnRlbXBvcmFsLmFwaS5jb21tb24udjEuUGF5bG9hZCJMChlDb21w",
            "bGV0ZVdvcmtmbG93RXhlY3V0aW9uEi8KBnJlc3VsdBgBIAEoCzIfLnRlbXBv",
            "cmFsLmFwaS5jb21tb24udjEuUGF5bG9hZCJKChVGYWlsV29ya2Zsb3dFeGVj",
            "dXRpb24SMQoHZmFpbHVyZRgBIAEoCzIgLnRlbXBvcmFsLmFwaS5mYWlsdXJl",
            "LnYxLkZhaWx1cmUivgYKHkNvbnRpbnVlQXNOZXdXb3JrZmxvd0V4ZWN1dGlv",
            "bhIVCg13b3JrZmxvd190eXBlGAEgASgJEhIKCnRhc2tfcXVldWUYAiABKAkS",
            "MgoJYXJndW1lbnRzGAMgAygLMh8udGVtcG9yYWwuYXBpLmNvbW1vbi52MS5Q",
            "YXlsb2FkEjcKFHdvcmtmbG93X3J1bl90aW1lb3V0GAQgASgLMhkuZ29vZ2xl",
            "LnByb3RvYnVmLkR1cmF0aW9uEjgKFXdvcmtmbG93X3Rhc2tfdGltZW91dBgF",
            "IAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJRCgRtZW1vGAYgAygL",
            "MkMuY29yZXNkay53b3JrZmxvd19jb21tYW5kcy5Db250aW51ZUFzTmV3V29y",
            "a2Zsb3dFeGVjdXRpb24uTWVtb0VudHJ5ElcKB2hlYWRlcnMYByADKAsyRi5j",
            "b3Jlc2RrLndvcmtmbG93X2NvbW1hbmRzLkNvbnRpbnVlQXNOZXdXb3JrZmxv",
            "d0V4ZWN1dGlvbi5IZWFkZXJzRW50cnkSagoRc2VhcmNoX2F0dHJpYnV0ZXMY",
            "CCADKAsyTy5jb3Jlc2RrLndvcmtmbG93X2NvbW1hbmRzLkNvbnRpbnVlQXNO",
            "ZXdXb3JrZmxvd0V4ZWN1dGlvbi5TZWFyY2hBdHRyaWJ1dGVzRW50cnkSOQoM",
            "cmV0cnlfcG9saWN5GAkgASgLMiMudGVtcG9yYWwuYXBpLmNvbW1vbi52MS5S",
            "ZXRyeVBvbGljeRpMCglNZW1vRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVl",
            "GAIgASgLMh8udGVtcG9yYWwuYXBpLmNvbW1vbi52MS5QYXlsb2FkOgI4ARpP",
            "CgxIZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8u",
            "dGVtcG9yYWwuYXBpLmNvbW1vbi52MS5QYXlsb2FkOgI4ARpYChVTZWFyY2hB",
            "dHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8u",
            "dGVtcG9yYWwuYXBpLmNvbW1vbi52MS5QYXlsb2FkOgI4ASIZChdDYW5jZWxX",
            "b3JrZmxvd0V4ZWN1dGlvbiI2Cg5TZXRQYXRjaE1hcmtlchIQCghwYXRjaF9p",
            "ZBgBIAEoCRISCgpkZXByZWNhdGVkGAIgASgIIqMJChtTdGFydENoaWxkV29y",
            "a2Zsb3dFeGVjdXRpb24SCwoDc2VxGAEgASgNEhEKCW5hbWVzcGFjZRgCIAEo",
            "CRITCgt3b3JrZmxvd19pZBgDIAEoCRIVCg13b3JrZmxvd190eXBlGAQgASgJ",
            "EhIKCnRhc2tfcXVldWUYBSABKAkSLgoFaW5wdXQYBiADKAsyHy50ZW1wb3Jh",
            "bC5hcGkuY29tbW9uLnYxLlBheWxvYWQSPQoad29ya2Zsb3dfZXhlY3V0aW9u",
            "X3RpbWVvdXQYByABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SNwoU",
            "d29ya2Zsb3dfcnVuX3RpbWVvdXQYCCABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb24SOAoVd29ya2Zsb3dfdGFza190aW1lb3V0GAkgASgLMhkuZ29v",
            "Z2xlLnByb3RvYnVmLkR1cmF0aW9uEkYKE3BhcmVudF9jbG9zZV9wb2xpY3kY",
            "CiABKA4yKS5jb3Jlc2RrLmNoaWxkX3dvcmtmbG93LlBhcmVudENsb3NlUG9s",
            "aWN5Ek4KGHdvcmtmbG93X2lkX3JldXNlX3BvbGljeRgMIAEoDjIsLnRlbXBv",
            "cmFsLmFwaS5lbnVtcy52MS5Xb3JrZmxvd0lkUmV1c2VQb2xpY3kSOQoMcmV0",
            "cnlfcG9saWN5GA0gASgLMiMudGVtcG9yYWwuYXBpLmNvbW1vbi52MS5SZXRy",
            "eVBvbGljeRIVCg1jcm9uX3NjaGVkdWxlGA4gASgJElQKB2hlYWRlcnMYDyAD",
            "KAsyQy5jb3Jlc2RrLndvcmtmbG93X2NvbW1hbmRzLlN0YXJ0Q2hpbGRXb3Jr",
            "Zmxvd0V4ZWN1dGlvbi5IZWFkZXJzRW50cnkSTgoEbWVtbxgQIAMoCzJALmNv",
            "cmVzZGsud29ya2Zsb3dfY29tbWFuZHMuU3RhcnRDaGlsZFdvcmtmbG93RXhl",
            "Y3V0aW9uLk1lbW9FbnRyeRJnChFzZWFyY2hfYXR0cmlidXRlcxgRIAMoCzJM",
            "LmNvcmVzZGsud29ya2Zsb3dfY29tbWFuZHMuU3RhcnRDaGlsZFdvcmtmbG93",
            "RXhlY3V0aW9uLlNlYXJjaEF0dHJpYnV0ZXNFbnRyeRJQChFjYW5jZWxsYXRp",
            "b25fdHlwZRgSIAEoDjI1LmNvcmVzZGsuY2hpbGRfd29ya2Zsb3cuQ2hpbGRX",
            "b3JrZmxvd0NhbmNlbGxhdGlvblR5cGUaTwoMSGVhZGVyc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnRlbXBvcmFsLmFwaS5jb21tb24u",
            "djEuUGF5bG9hZDoCOAEaTAoJTWVtb0VudHJ5EgsKA2tleRgBIAEoCRIuCgV2",
            "YWx1ZRgCIAEoCzIfLnRlbXBvcmFsLmFwaS5jb21tb24udjEuUGF5bG9hZDoC",
            "OAEaWAoVU2VhcmNoQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAEoCRIuCgV2",
            "YWx1ZRgCIAEoCzIfLnRlbXBvcmFsLmFwaS5jb21tb24udjEuUGF5bG9hZDoC",
            "OAEiQwolQ2FuY2VsVW5zdGFydGVkQ2hpbGRXb3JrZmxvd0V4ZWN1dGlvbhIa",
            "ChJjaGlsZF93b3JrZmxvd19zZXEYASABKA0ipwEKJlJlcXVlc3RDYW5jZWxF",
            "eHRlcm5hbFdvcmtmbG93RXhlY3V0aW9uEgsKA3NlcRgBIAEoDRJJChJ3b3Jr",
            "Zmxvd19leGVjdXRpb24YAiABKAsyKy5jb3Jlc2RrLmNvbW1vbi5OYW1lc3Bh",
            "Y2VkV29ya2Zsb3dFeGVjdXRpb25IABIbChFjaGlsZF93b3JrZmxvd19pZBgD",
            "IAEoCUgAQggKBnRhcmdldCKPAwofU2lnbmFsRXh0ZXJuYWxXb3JrZmxvd0V4",
            "ZWN1dGlvbhILCgNzZXEYASABKA0SSQoSd29ya2Zsb3dfZXhlY3V0aW9uGAIg",
            "ASgLMisuY29yZXNkay5jb21tb24uTmFtZXNwYWNlZFdvcmtmbG93RXhlY3V0",
            "aW9uSAASGwoRY2hpbGRfd29ya2Zsb3dfaWQYAyABKAlIABITCgtzaWduYWxf",
            "bmFtZRgEIAEoCRItCgRhcmdzGAUgAygLMh8udGVtcG9yYWwuYXBpLmNvbW1v",
            "bi52MS5QYXlsb2FkElgKB2hlYWRlcnMYBiADKAsyRy5jb3Jlc2RrLndvcmtm",
            "bG93X2NvbW1hbmRzLlNpZ25hbEV4dGVybmFsV29ya2Zsb3dFeGVjdXRpb24u",
            "SGVhZGVyc0VudHJ5Gk8KDEhlYWRlcnNFbnRyeRILCgNrZXkYASABKAkSLgoF",
            "dmFsdWUYAiABKAsyHy50ZW1wb3JhbC5hcGkuY29tbW9uLnYxLlBheWxvYWQ6",
            "AjgBQggKBnRhcmdldCIjChRDYW5jZWxTaWduYWxXb3JrZmxvdxILCgNzZXEY",
            "ASABKA0i5gEKHlVwc2VydFdvcmtmbG93U2VhcmNoQXR0cmlidXRlcxJqChFz",
            "ZWFyY2hfYXR0cmlidXRlcxgBIAMoCzJPLmNvcmVzZGsud29ya2Zsb3dfY29t",
            "bWFuZHMuVXBzZXJ0V29ya2Zsb3dTZWFyY2hBdHRyaWJ1dGVzLlNlYXJjaEF0",
            "dHJpYnV0ZXNFbnRyeRpYChVTZWFyY2hBdHRyaWJ1dGVzRW50cnkSCwoDa2V5",
            "GAEgASgJEi4KBXZhbHVlGAIgASgLMh8udGVtcG9yYWwuYXBpLmNvbW1vbi52",
            "MS5QYXlsb2FkOgI4ASpYChhBY3Rpdml0eUNhbmNlbGxhdGlvblR5cGUSDgoK",
            "VFJZX0NBTkNFTBAAEh8KG1dBSVRfQ0FOQ0VMTEFUSU9OX0NPTVBMRVRFRBAB",
            "EgsKB0FCQU5ET04QAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Temporal.Api.Common.V1.MessageReflection.Descriptor, global::Temporal.Api.Enums.V1.WorkflowReflection.Descriptor, global::Temporal.Api.Failure.V1.MessageReflection.Descriptor, global::Coresdk.ChildWorkflow.ChildWorkflowReflection.Descriptor, global::Coresdk.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Coresdk.WorkflowCommands.ActivityCancellationType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.WorkflowCommand), global::Coresdk.WorkflowCommands.WorkflowCommand.Parser, new[]{ "StartTimer", "ScheduleActivity", "RespondToQuery", "RequestCancelActivity", "CancelTimer", "CompleteWorkflowExecution", "FailWorkflowExecution", "ContinueAsNewWorkflowExecution", "CancelWorkflowExecution", "SetPatchMarker", "StartChildWorkflowExecution", "CancelUnstartedChildWorkflowExecution", "RequestCancelExternalWorkflowExecution", "SignalExternalWorkflowExecution", "CancelSignalWorkflow", "ScheduleLocalActivity", "RequestCancelLocalActivity", "UpsertWorkflowSearchAttributes" }, new[]{ "Variant" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.StartTimer), global::Coresdk.WorkflowCommands.StartTimer.Parser, new[]{ "Seq", "StartToFireTimeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.CancelTimer), global::Coresdk.WorkflowCommands.CancelTimer.Parser, new[]{ "Seq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.ScheduleActivity), global::Coresdk.WorkflowCommands.ScheduleActivity.Parser, new[]{ "Seq", "ActivityId", "ActivityType", "Namespace", "TaskQueue", "Headers", "Arguments", "ScheduleToCloseTimeout", "ScheduleToStartTimeout", "StartToCloseTimeout", "HeartbeatTimeout", "RetryPolicy", "CancellationType", "DoNotEagerlyExecute" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.ScheduleLocalActivity), global::Coresdk.WorkflowCommands.ScheduleLocalActivity.Parser, new[]{ "Seq", "ActivityId", "ActivityType", "Attempt", "OriginalScheduleTime", "Headers", "Arguments", "ScheduleToCloseTimeout", "ScheduleToStartTimeout", "StartToCloseTimeout", "RetryPolicy", "LocalRetryThreshold", "CancellationType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.RequestCancelActivity), global::Coresdk.WorkflowCommands.RequestCancelActivity.Parser, new[]{ "Seq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.RequestCancelLocalActivity), global::Coresdk.WorkflowCommands.RequestCancelLocalActivity.Parser, new[]{ "Seq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.QueryResult), global::Coresdk.WorkflowCommands.QueryResult.Parser, new[]{ "QueryId", "Succeeded", "Failed" }, new[]{ "Variant" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.QuerySuccess), global::Coresdk.WorkflowCommands.QuerySuccess.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.CompleteWorkflowExecution), global::Coresdk.WorkflowCommands.CompleteWorkflowExecution.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.FailWorkflowExecution), global::Coresdk.WorkflowCommands.FailWorkflowExecution.Parser, new[]{ "Failure" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution), global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution.Parser, new[]{ "WorkflowType", "TaskQueue", "Arguments", "WorkflowRunTimeout", "WorkflowTaskTimeout", "Memo", "Headers", "SearchAttributes", "RetryPolicy" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.CancelWorkflowExecution), global::Coresdk.WorkflowCommands.CancelWorkflowExecution.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.SetPatchMarker), global::Coresdk.WorkflowCommands.SetPatchMarker.Parser, new[]{ "PatchId", "Deprecated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.StartChildWorkflowExecution), global::Coresdk.WorkflowCommands.StartChildWorkflowExecution.Parser, new[]{ "Seq", "Namespace", "WorkflowId", "WorkflowType", "TaskQueue", "Input", "WorkflowExecutionTimeout", "WorkflowRunTimeout", "WorkflowTaskTimeout", "ParentClosePolicy", "WorkflowIdReusePolicy", "RetryPolicy", "CronSchedule", "Headers", "Memo", "SearchAttributes", "CancellationType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution), global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution.Parser, new[]{ "ChildWorkflowSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution), global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution.Parser, new[]{ "Seq", "WorkflowExecution", "ChildWorkflowId" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution), global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution.Parser, new[]{ "Seq", "WorkflowExecution", "ChildWorkflowId", "SignalName", "Args", "Headers" }, new[]{ "Target" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.CancelSignalWorkflow), global::Coresdk.WorkflowCommands.CancelSignalWorkflow.Parser, new[]{ "Seq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes), global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes.Parser, new[]{ "SearchAttributes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum ActivityCancellationType {
    /// <summary>
    //// Initiate a cancellation request and immediately report cancellation to the workflow.
    /// </summary>
    [pbr::OriginalName("TRY_CANCEL")] TryCancel = 0,
    /// <summary>
    //// Wait for activity cancellation completion. Note that activity must heartbeat to receive a
    //// cancellation notification. This can block the cancellation for a long time if activity
    //// doesn't heartbeat or chooses to ignore the cancellation request.
    /// </summary>
    [pbr::OriginalName("WAIT_CANCELLATION_COMPLETED")] WaitCancellationCompleted = 1,
    /// <summary>
    //// Do not request cancellation of the activity and immediately report cancellation to the
    //// workflow
    /// </summary>
    [pbr::OriginalName("ABANDON")] Abandon = 2,
  }

  #endregion

  #region Messages
  public sealed partial class WorkflowCommand : pb::IMessage<WorkflowCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkflowCommand> _parser = new pb::MessageParser<WorkflowCommand>(() => new WorkflowCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorkflowCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowCommand(WorkflowCommand other) : this() {
      switch (other.VariantCase) {
        case VariantOneofCase.StartTimer:
          StartTimer = other.StartTimer.Clone();
          break;
        case VariantOneofCase.ScheduleActivity:
          ScheduleActivity = other.ScheduleActivity.Clone();
          break;
        case VariantOneofCase.RespondToQuery:
          RespondToQuery = other.RespondToQuery.Clone();
          break;
        case VariantOneofCase.RequestCancelActivity:
          RequestCancelActivity = other.RequestCancelActivity.Clone();
          break;
        case VariantOneofCase.CancelTimer:
          CancelTimer = other.CancelTimer.Clone();
          break;
        case VariantOneofCase.CompleteWorkflowExecution:
          CompleteWorkflowExecution = other.CompleteWorkflowExecution.Clone();
          break;
        case VariantOneofCase.FailWorkflowExecution:
          FailWorkflowExecution = other.FailWorkflowExecution.Clone();
          break;
        case VariantOneofCase.ContinueAsNewWorkflowExecution:
          ContinueAsNewWorkflowExecution = other.ContinueAsNewWorkflowExecution.Clone();
          break;
        case VariantOneofCase.CancelWorkflowExecution:
          CancelWorkflowExecution = other.CancelWorkflowExecution.Clone();
          break;
        case VariantOneofCase.SetPatchMarker:
          SetPatchMarker = other.SetPatchMarker.Clone();
          break;
        case VariantOneofCase.StartChildWorkflowExecution:
          StartChildWorkflowExecution = other.StartChildWorkflowExecution.Clone();
          break;
        case VariantOneofCase.CancelUnstartedChildWorkflowExecution:
          CancelUnstartedChildWorkflowExecution = other.CancelUnstartedChildWorkflowExecution.Clone();
          break;
        case VariantOneofCase.RequestCancelExternalWorkflowExecution:
          RequestCancelExternalWorkflowExecution = other.RequestCancelExternalWorkflowExecution.Clone();
          break;
        case VariantOneofCase.SignalExternalWorkflowExecution:
          SignalExternalWorkflowExecution = other.SignalExternalWorkflowExecution.Clone();
          break;
        case VariantOneofCase.CancelSignalWorkflow:
          CancelSignalWorkflow = other.CancelSignalWorkflow.Clone();
          break;
        case VariantOneofCase.ScheduleLocalActivity:
          ScheduleLocalActivity = other.ScheduleLocalActivity.Clone();
          break;
        case VariantOneofCase.RequestCancelLocalActivity:
          RequestCancelLocalActivity = other.RequestCancelLocalActivity.Clone();
          break;
        case VariantOneofCase.UpsertWorkflowSearchAttributes:
          UpsertWorkflowSearchAttributes = other.UpsertWorkflowSearchAttributes.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowCommand Clone() {
      return new WorkflowCommand(this);
    }

    /// <summary>Field number for the "start_timer" field.</summary>
    public const int StartTimerFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.StartTimer StartTimer {
      get { return variantCase_ == VariantOneofCase.StartTimer ? (global::Coresdk.WorkflowCommands.StartTimer) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.StartTimer;
      }
    }

    /// <summary>Field number for the "schedule_activity" field.</summary>
    public const int ScheduleActivityFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.ScheduleActivity ScheduleActivity {
      get { return variantCase_ == VariantOneofCase.ScheduleActivity ? (global::Coresdk.WorkflowCommands.ScheduleActivity) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.ScheduleActivity;
      }
    }

    /// <summary>Field number for the "respond_to_query" field.</summary>
    public const int RespondToQueryFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.QueryResult RespondToQuery {
      get { return variantCase_ == VariantOneofCase.RespondToQuery ? (global::Coresdk.WorkflowCommands.QueryResult) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.RespondToQuery;
      }
    }

    /// <summary>Field number for the "request_cancel_activity" field.</summary>
    public const int RequestCancelActivityFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.RequestCancelActivity RequestCancelActivity {
      get { return variantCase_ == VariantOneofCase.RequestCancelActivity ? (global::Coresdk.WorkflowCommands.RequestCancelActivity) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.RequestCancelActivity;
      }
    }

    /// <summary>Field number for the "cancel_timer" field.</summary>
    public const int CancelTimerFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.CancelTimer CancelTimer {
      get { return variantCase_ == VariantOneofCase.CancelTimer ? (global::Coresdk.WorkflowCommands.CancelTimer) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.CancelTimer;
      }
    }

    /// <summary>Field number for the "complete_workflow_execution" field.</summary>
    public const int CompleteWorkflowExecutionFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.CompleteWorkflowExecution CompleteWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.CompleteWorkflowExecution ? (global::Coresdk.WorkflowCommands.CompleteWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.CompleteWorkflowExecution;
      }
    }

    /// <summary>Field number for the "fail_workflow_execution" field.</summary>
    public const int FailWorkflowExecutionFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.FailWorkflowExecution FailWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.FailWorkflowExecution ? (global::Coresdk.WorkflowCommands.FailWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.FailWorkflowExecution;
      }
    }

    /// <summary>Field number for the "continue_as_new_workflow_execution" field.</summary>
    public const int ContinueAsNewWorkflowExecutionFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution ContinueAsNewWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution ? (global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.ContinueAsNewWorkflowExecution;
      }
    }

    /// <summary>Field number for the "cancel_workflow_execution" field.</summary>
    public const int CancelWorkflowExecutionFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.CancelWorkflowExecution CancelWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.CancelWorkflowExecution ? (global::Coresdk.WorkflowCommands.CancelWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.CancelWorkflowExecution;
      }
    }

    /// <summary>Field number for the "set_patch_marker" field.</summary>
    public const int SetPatchMarkerFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.SetPatchMarker SetPatchMarker {
      get { return variantCase_ == VariantOneofCase.SetPatchMarker ? (global::Coresdk.WorkflowCommands.SetPatchMarker) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.SetPatchMarker;
      }
    }

    /// <summary>Field number for the "start_child_workflow_execution" field.</summary>
    public const int StartChildWorkflowExecutionFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.StartChildWorkflowExecution StartChildWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.StartChildWorkflowExecution ? (global::Coresdk.WorkflowCommands.StartChildWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.StartChildWorkflowExecution;
      }
    }

    /// <summary>Field number for the "cancel_unstarted_child_workflow_execution" field.</summary>
    public const int CancelUnstartedChildWorkflowExecutionFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution CancelUnstartedChildWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution ? (global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.CancelUnstartedChildWorkflowExecution;
      }
    }

    /// <summary>Field number for the "request_cancel_external_workflow_execution" field.</summary>
    public const int RequestCancelExternalWorkflowExecutionFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution RequestCancelExternalWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution ? (global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.RequestCancelExternalWorkflowExecution;
      }
    }

    /// <summary>Field number for the "signal_external_workflow_execution" field.</summary>
    public const int SignalExternalWorkflowExecutionFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution SignalExternalWorkflowExecution {
      get { return variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution ? (global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.SignalExternalWorkflowExecution;
      }
    }

    /// <summary>Field number for the "cancel_signal_workflow" field.</summary>
    public const int CancelSignalWorkflowFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.CancelSignalWorkflow CancelSignalWorkflow {
      get { return variantCase_ == VariantOneofCase.CancelSignalWorkflow ? (global::Coresdk.WorkflowCommands.CancelSignalWorkflow) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.CancelSignalWorkflow;
      }
    }

    /// <summary>Field number for the "schedule_local_activity" field.</summary>
    public const int ScheduleLocalActivityFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.ScheduleLocalActivity ScheduleLocalActivity {
      get { return variantCase_ == VariantOneofCase.ScheduleLocalActivity ? (global::Coresdk.WorkflowCommands.ScheduleLocalActivity) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.ScheduleLocalActivity;
      }
    }

    /// <summary>Field number for the "request_cancel_local_activity" field.</summary>
    public const int RequestCancelLocalActivityFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.RequestCancelLocalActivity RequestCancelLocalActivity {
      get { return variantCase_ == VariantOneofCase.RequestCancelLocalActivity ? (global::Coresdk.WorkflowCommands.RequestCancelLocalActivity) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.RequestCancelLocalActivity;
      }
    }

    /// <summary>Field number for the "upsert_workflow_search_attributes" field.</summary>
    public const int UpsertWorkflowSearchAttributesFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes UpsertWorkflowSearchAttributes {
      get { return variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes ? (global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.UpsertWorkflowSearchAttributes;
      }
    }

    private object variant_;
    /// <summary>Enum of possible cases for the "variant" oneof.</summary>
    public enum VariantOneofCase {
      None = 0,
      StartTimer = 1,
      ScheduleActivity = 2,
      RespondToQuery = 3,
      RequestCancelActivity = 4,
      CancelTimer = 5,
      CompleteWorkflowExecution = 6,
      FailWorkflowExecution = 7,
      ContinueAsNewWorkflowExecution = 8,
      CancelWorkflowExecution = 9,
      SetPatchMarker = 10,
      StartChildWorkflowExecution = 11,
      CancelUnstartedChildWorkflowExecution = 12,
      RequestCancelExternalWorkflowExecution = 13,
      SignalExternalWorkflowExecution = 14,
      CancelSignalWorkflow = 15,
      ScheduleLocalActivity = 16,
      RequestCancelLocalActivity = 17,
      UpsertWorkflowSearchAttributes = 18,
    }
    private VariantOneofCase variantCase_ = VariantOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariantOneofCase VariantCase {
      get { return variantCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVariant() {
      variantCase_ = VariantOneofCase.None;
      variant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorkflowCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorkflowCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTimer, other.StartTimer)) return false;
      if (!object.Equals(ScheduleActivity, other.ScheduleActivity)) return false;
      if (!object.Equals(RespondToQuery, other.RespondToQuery)) return false;
      if (!object.Equals(RequestCancelActivity, other.RequestCancelActivity)) return false;
      if (!object.Equals(CancelTimer, other.CancelTimer)) return false;
      if (!object.Equals(CompleteWorkflowExecution, other.CompleteWorkflowExecution)) return false;
      if (!object.Equals(FailWorkflowExecution, other.FailWorkflowExecution)) return false;
      if (!object.Equals(ContinueAsNewWorkflowExecution, other.ContinueAsNewWorkflowExecution)) return false;
      if (!object.Equals(CancelWorkflowExecution, other.CancelWorkflowExecution)) return false;
      if (!object.Equals(SetPatchMarker, other.SetPatchMarker)) return false;
      if (!object.Equals(StartChildWorkflowExecution, other.StartChildWorkflowExecution)) return false;
      if (!object.Equals(CancelUnstartedChildWorkflowExecution, other.CancelUnstartedChildWorkflowExecution)) return false;
      if (!object.Equals(RequestCancelExternalWorkflowExecution, other.RequestCancelExternalWorkflowExecution)) return false;
      if (!object.Equals(SignalExternalWorkflowExecution, other.SignalExternalWorkflowExecution)) return false;
      if (!object.Equals(CancelSignalWorkflow, other.CancelSignalWorkflow)) return false;
      if (!object.Equals(ScheduleLocalActivity, other.ScheduleLocalActivity)) return false;
      if (!object.Equals(RequestCancelLocalActivity, other.RequestCancelLocalActivity)) return false;
      if (!object.Equals(UpsertWorkflowSearchAttributes, other.UpsertWorkflowSearchAttributes)) return false;
      if (VariantCase != other.VariantCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (variantCase_ == VariantOneofCase.StartTimer) hash ^= StartTimer.GetHashCode();
      if (variantCase_ == VariantOneofCase.ScheduleActivity) hash ^= ScheduleActivity.GetHashCode();
      if (variantCase_ == VariantOneofCase.RespondToQuery) hash ^= RespondToQuery.GetHashCode();
      if (variantCase_ == VariantOneofCase.RequestCancelActivity) hash ^= RequestCancelActivity.GetHashCode();
      if (variantCase_ == VariantOneofCase.CancelTimer) hash ^= CancelTimer.GetHashCode();
      if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) hash ^= CompleteWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.FailWorkflowExecution) hash ^= FailWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) hash ^= ContinueAsNewWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) hash ^= CancelWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.SetPatchMarker) hash ^= SetPatchMarker.GetHashCode();
      if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) hash ^= StartChildWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) hash ^= CancelUnstartedChildWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) hash ^= RequestCancelExternalWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) hash ^= SignalExternalWorkflowExecution.GetHashCode();
      if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) hash ^= CancelSignalWorkflow.GetHashCode();
      if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) hash ^= ScheduleLocalActivity.GetHashCode();
      if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) hash ^= RequestCancelLocalActivity.GetHashCode();
      if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) hash ^= UpsertWorkflowSearchAttributes.GetHashCode();
      hash ^= (int) variantCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (variantCase_ == VariantOneofCase.StartTimer) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimer);
      }
      if (variantCase_ == VariantOneofCase.ScheduleActivity) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleActivity);
      }
      if (variantCase_ == VariantOneofCase.RespondToQuery) {
        output.WriteRawTag(26);
        output.WriteMessage(RespondToQuery);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelActivity) {
        output.WriteRawTag(34);
        output.WriteMessage(RequestCancelActivity);
      }
      if (variantCase_ == VariantOneofCase.CancelTimer) {
        output.WriteRawTag(42);
        output.WriteMessage(CancelTimer);
      }
      if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) {
        output.WriteRawTag(50);
        output.WriteMessage(CompleteWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.FailWorkflowExecution) {
        output.WriteRawTag(58);
        output.WriteMessage(FailWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) {
        output.WriteRawTag(66);
        output.WriteMessage(ContinueAsNewWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) {
        output.WriteRawTag(74);
        output.WriteMessage(CancelWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SetPatchMarker) {
        output.WriteRawTag(82);
        output.WriteMessage(SetPatchMarker);
      }
      if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) {
        output.WriteRawTag(90);
        output.WriteMessage(StartChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) {
        output.WriteRawTag(98);
        output.WriteMessage(CancelUnstartedChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) {
        output.WriteRawTag(106);
        output.WriteMessage(RequestCancelExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) {
        output.WriteRawTag(114);
        output.WriteMessage(SignalExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) {
        output.WriteRawTag(122);
        output.WriteMessage(CancelSignalWorkflow);
      }
      if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ScheduleLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RequestCancelLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UpsertWorkflowSearchAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (variantCase_ == VariantOneofCase.StartTimer) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimer);
      }
      if (variantCase_ == VariantOneofCase.ScheduleActivity) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleActivity);
      }
      if (variantCase_ == VariantOneofCase.RespondToQuery) {
        output.WriteRawTag(26);
        output.WriteMessage(RespondToQuery);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelActivity) {
        output.WriteRawTag(34);
        output.WriteMessage(RequestCancelActivity);
      }
      if (variantCase_ == VariantOneofCase.CancelTimer) {
        output.WriteRawTag(42);
        output.WriteMessage(CancelTimer);
      }
      if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) {
        output.WriteRawTag(50);
        output.WriteMessage(CompleteWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.FailWorkflowExecution) {
        output.WriteRawTag(58);
        output.WriteMessage(FailWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) {
        output.WriteRawTag(66);
        output.WriteMessage(ContinueAsNewWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) {
        output.WriteRawTag(74);
        output.WriteMessage(CancelWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SetPatchMarker) {
        output.WriteRawTag(82);
        output.WriteMessage(SetPatchMarker);
      }
      if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) {
        output.WriteRawTag(90);
        output.WriteMessage(StartChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) {
        output.WriteRawTag(98);
        output.WriteMessage(CancelUnstartedChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) {
        output.WriteRawTag(106);
        output.WriteMessage(RequestCancelExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) {
        output.WriteRawTag(114);
        output.WriteMessage(SignalExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) {
        output.WriteRawTag(122);
        output.WriteMessage(CancelSignalWorkflow);
      }
      if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ScheduleLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RequestCancelLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UpsertWorkflowSearchAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (variantCase_ == VariantOneofCase.StartTimer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimer);
      }
      if (variantCase_ == VariantOneofCase.ScheduleActivity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleActivity);
      }
      if (variantCase_ == VariantOneofCase.RespondToQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RespondToQuery);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelActivity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestCancelActivity);
      }
      if (variantCase_ == VariantOneofCase.CancelTimer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelTimer);
      }
      if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompleteWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.FailWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FailWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContinueAsNewWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SetPatchMarker) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetPatchMarker);
      }
      if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelUnstartedChildWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestCancelExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignalExternalWorkflowExecution);
      }
      if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelSignalWorkflow);
      }
      if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScheduleLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestCancelLocalActivity);
      }
      if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpsertWorkflowSearchAttributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorkflowCommand other) {
      if (other == null) {
        return;
      }
      switch (other.VariantCase) {
        case VariantOneofCase.StartTimer:
          if (StartTimer == null) {
            StartTimer = new global::Coresdk.WorkflowCommands.StartTimer();
          }
          StartTimer.MergeFrom(other.StartTimer);
          break;
        case VariantOneofCase.ScheduleActivity:
          if (ScheduleActivity == null) {
            ScheduleActivity = new global::Coresdk.WorkflowCommands.ScheduleActivity();
          }
          ScheduleActivity.MergeFrom(other.ScheduleActivity);
          break;
        case VariantOneofCase.RespondToQuery:
          if (RespondToQuery == null) {
            RespondToQuery = new global::Coresdk.WorkflowCommands.QueryResult();
          }
          RespondToQuery.MergeFrom(other.RespondToQuery);
          break;
        case VariantOneofCase.RequestCancelActivity:
          if (RequestCancelActivity == null) {
            RequestCancelActivity = new global::Coresdk.WorkflowCommands.RequestCancelActivity();
          }
          RequestCancelActivity.MergeFrom(other.RequestCancelActivity);
          break;
        case VariantOneofCase.CancelTimer:
          if (CancelTimer == null) {
            CancelTimer = new global::Coresdk.WorkflowCommands.CancelTimer();
          }
          CancelTimer.MergeFrom(other.CancelTimer);
          break;
        case VariantOneofCase.CompleteWorkflowExecution:
          if (CompleteWorkflowExecution == null) {
            CompleteWorkflowExecution = new global::Coresdk.WorkflowCommands.CompleteWorkflowExecution();
          }
          CompleteWorkflowExecution.MergeFrom(other.CompleteWorkflowExecution);
          break;
        case VariantOneofCase.FailWorkflowExecution:
          if (FailWorkflowExecution == null) {
            FailWorkflowExecution = new global::Coresdk.WorkflowCommands.FailWorkflowExecution();
          }
          FailWorkflowExecution.MergeFrom(other.FailWorkflowExecution);
          break;
        case VariantOneofCase.ContinueAsNewWorkflowExecution:
          if (ContinueAsNewWorkflowExecution == null) {
            ContinueAsNewWorkflowExecution = new global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution();
          }
          ContinueAsNewWorkflowExecution.MergeFrom(other.ContinueAsNewWorkflowExecution);
          break;
        case VariantOneofCase.CancelWorkflowExecution:
          if (CancelWorkflowExecution == null) {
            CancelWorkflowExecution = new global::Coresdk.WorkflowCommands.CancelWorkflowExecution();
          }
          CancelWorkflowExecution.MergeFrom(other.CancelWorkflowExecution);
          break;
        case VariantOneofCase.SetPatchMarker:
          if (SetPatchMarker == null) {
            SetPatchMarker = new global::Coresdk.WorkflowCommands.SetPatchMarker();
          }
          SetPatchMarker.MergeFrom(other.SetPatchMarker);
          break;
        case VariantOneofCase.StartChildWorkflowExecution:
          if (StartChildWorkflowExecution == null) {
            StartChildWorkflowExecution = new global::Coresdk.WorkflowCommands.StartChildWorkflowExecution();
          }
          StartChildWorkflowExecution.MergeFrom(other.StartChildWorkflowExecution);
          break;
        case VariantOneofCase.CancelUnstartedChildWorkflowExecution:
          if (CancelUnstartedChildWorkflowExecution == null) {
            CancelUnstartedChildWorkflowExecution = new global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution();
          }
          CancelUnstartedChildWorkflowExecution.MergeFrom(other.CancelUnstartedChildWorkflowExecution);
          break;
        case VariantOneofCase.RequestCancelExternalWorkflowExecution:
          if (RequestCancelExternalWorkflowExecution == null) {
            RequestCancelExternalWorkflowExecution = new global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution();
          }
          RequestCancelExternalWorkflowExecution.MergeFrom(other.RequestCancelExternalWorkflowExecution);
          break;
        case VariantOneofCase.SignalExternalWorkflowExecution:
          if (SignalExternalWorkflowExecution == null) {
            SignalExternalWorkflowExecution = new global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution();
          }
          SignalExternalWorkflowExecution.MergeFrom(other.SignalExternalWorkflowExecution);
          break;
        case VariantOneofCase.CancelSignalWorkflow:
          if (CancelSignalWorkflow == null) {
            CancelSignalWorkflow = new global::Coresdk.WorkflowCommands.CancelSignalWorkflow();
          }
          CancelSignalWorkflow.MergeFrom(other.CancelSignalWorkflow);
          break;
        case VariantOneofCase.ScheduleLocalActivity:
          if (ScheduleLocalActivity == null) {
            ScheduleLocalActivity = new global::Coresdk.WorkflowCommands.ScheduleLocalActivity();
          }
          ScheduleLocalActivity.MergeFrom(other.ScheduleLocalActivity);
          break;
        case VariantOneofCase.RequestCancelLocalActivity:
          if (RequestCancelLocalActivity == null) {
            RequestCancelLocalActivity = new global::Coresdk.WorkflowCommands.RequestCancelLocalActivity();
          }
          RequestCancelLocalActivity.MergeFrom(other.RequestCancelLocalActivity);
          break;
        case VariantOneofCase.UpsertWorkflowSearchAttributes:
          if (UpsertWorkflowSearchAttributes == null) {
            UpsertWorkflowSearchAttributes = new global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes();
          }
          UpsertWorkflowSearchAttributes.MergeFrom(other.UpsertWorkflowSearchAttributes);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Coresdk.WorkflowCommands.StartTimer subBuilder = new global::Coresdk.WorkflowCommands.StartTimer();
            if (variantCase_ == VariantOneofCase.StartTimer) {
              subBuilder.MergeFrom(StartTimer);
            }
            input.ReadMessage(subBuilder);
            StartTimer = subBuilder;
            break;
          }
          case 18: {
            global::Coresdk.WorkflowCommands.ScheduleActivity subBuilder = new global::Coresdk.WorkflowCommands.ScheduleActivity();
            if (variantCase_ == VariantOneofCase.ScheduleActivity) {
              subBuilder.MergeFrom(ScheduleActivity);
            }
            input.ReadMessage(subBuilder);
            ScheduleActivity = subBuilder;
            break;
          }
          case 26: {
            global::Coresdk.WorkflowCommands.QueryResult subBuilder = new global::Coresdk.WorkflowCommands.QueryResult();
            if (variantCase_ == VariantOneofCase.RespondToQuery) {
              subBuilder.MergeFrom(RespondToQuery);
            }
            input.ReadMessage(subBuilder);
            RespondToQuery = subBuilder;
            break;
          }
          case 34: {
            global::Coresdk.WorkflowCommands.RequestCancelActivity subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelActivity();
            if (variantCase_ == VariantOneofCase.RequestCancelActivity) {
              subBuilder.MergeFrom(RequestCancelActivity);
            }
            input.ReadMessage(subBuilder);
            RequestCancelActivity = subBuilder;
            break;
          }
          case 42: {
            global::Coresdk.WorkflowCommands.CancelTimer subBuilder = new global::Coresdk.WorkflowCommands.CancelTimer();
            if (variantCase_ == VariantOneofCase.CancelTimer) {
              subBuilder.MergeFrom(CancelTimer);
            }
            input.ReadMessage(subBuilder);
            CancelTimer = subBuilder;
            break;
          }
          case 50: {
            global::Coresdk.WorkflowCommands.CompleteWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CompleteWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) {
              subBuilder.MergeFrom(CompleteWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CompleteWorkflowExecution = subBuilder;
            break;
          }
          case 58: {
            global::Coresdk.WorkflowCommands.FailWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.FailWorkflowExecution();
            if (variantCase_ == VariantOneofCase.FailWorkflowExecution) {
              subBuilder.MergeFrom(FailWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            FailWorkflowExecution = subBuilder;
            break;
          }
          case 66: {
            global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution();
            if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) {
              subBuilder.MergeFrom(ContinueAsNewWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            ContinueAsNewWorkflowExecution = subBuilder;
            break;
          }
          case 74: {
            global::Coresdk.WorkflowCommands.CancelWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CancelWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) {
              subBuilder.MergeFrom(CancelWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CancelWorkflowExecution = subBuilder;
            break;
          }
          case 82: {
            global::Coresdk.WorkflowCommands.SetPatchMarker subBuilder = new global::Coresdk.WorkflowCommands.SetPatchMarker();
            if (variantCase_ == VariantOneofCase.SetPatchMarker) {
              subBuilder.MergeFrom(SetPatchMarker);
            }
            input.ReadMessage(subBuilder);
            SetPatchMarker = subBuilder;
            break;
          }
          case 90: {
            global::Coresdk.WorkflowCommands.StartChildWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.StartChildWorkflowExecution();
            if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) {
              subBuilder.MergeFrom(StartChildWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            StartChildWorkflowExecution = subBuilder;
            break;
          }
          case 98: {
            global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) {
              subBuilder.MergeFrom(CancelUnstartedChildWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CancelUnstartedChildWorkflowExecution = subBuilder;
            break;
          }
          case 106: {
            global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution();
            if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) {
              subBuilder.MergeFrom(RequestCancelExternalWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            RequestCancelExternalWorkflowExecution = subBuilder;
            break;
          }
          case 114: {
            global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution();
            if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) {
              subBuilder.MergeFrom(SignalExternalWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            SignalExternalWorkflowExecution = subBuilder;
            break;
          }
          case 122: {
            global::Coresdk.WorkflowCommands.CancelSignalWorkflow subBuilder = new global::Coresdk.WorkflowCommands.CancelSignalWorkflow();
            if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) {
              subBuilder.MergeFrom(CancelSignalWorkflow);
            }
            input.ReadMessage(subBuilder);
            CancelSignalWorkflow = subBuilder;
            break;
          }
          case 130: {
            global::Coresdk.WorkflowCommands.ScheduleLocalActivity subBuilder = new global::Coresdk.WorkflowCommands.ScheduleLocalActivity();
            if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) {
              subBuilder.MergeFrom(ScheduleLocalActivity);
            }
            input.ReadMessage(subBuilder);
            ScheduleLocalActivity = subBuilder;
            break;
          }
          case 138: {
            global::Coresdk.WorkflowCommands.RequestCancelLocalActivity subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelLocalActivity();
            if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) {
              subBuilder.MergeFrom(RequestCancelLocalActivity);
            }
            input.ReadMessage(subBuilder);
            RequestCancelLocalActivity = subBuilder;
            break;
          }
          case 146: {
            global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes subBuilder = new global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes();
            if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) {
              subBuilder.MergeFrom(UpsertWorkflowSearchAttributes);
            }
            input.ReadMessage(subBuilder);
            UpsertWorkflowSearchAttributes = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Coresdk.WorkflowCommands.StartTimer subBuilder = new global::Coresdk.WorkflowCommands.StartTimer();
            if (variantCase_ == VariantOneofCase.StartTimer) {
              subBuilder.MergeFrom(StartTimer);
            }
            input.ReadMessage(subBuilder);
            StartTimer = subBuilder;
            break;
          }
          case 18: {
            global::Coresdk.WorkflowCommands.ScheduleActivity subBuilder = new global::Coresdk.WorkflowCommands.ScheduleActivity();
            if (variantCase_ == VariantOneofCase.ScheduleActivity) {
              subBuilder.MergeFrom(ScheduleActivity);
            }
            input.ReadMessage(subBuilder);
            ScheduleActivity = subBuilder;
            break;
          }
          case 26: {
            global::Coresdk.WorkflowCommands.QueryResult subBuilder = new global::Coresdk.WorkflowCommands.QueryResult();
            if (variantCase_ == VariantOneofCase.RespondToQuery) {
              subBuilder.MergeFrom(RespondToQuery);
            }
            input.ReadMessage(subBuilder);
            RespondToQuery = subBuilder;
            break;
          }
          case 34: {
            global::Coresdk.WorkflowCommands.RequestCancelActivity subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelActivity();
            if (variantCase_ == VariantOneofCase.RequestCancelActivity) {
              subBuilder.MergeFrom(RequestCancelActivity);
            }
            input.ReadMessage(subBuilder);
            RequestCancelActivity = subBuilder;
            break;
          }
          case 42: {
            global::Coresdk.WorkflowCommands.CancelTimer subBuilder = new global::Coresdk.WorkflowCommands.CancelTimer();
            if (variantCase_ == VariantOneofCase.CancelTimer) {
              subBuilder.MergeFrom(CancelTimer);
            }
            input.ReadMessage(subBuilder);
            CancelTimer = subBuilder;
            break;
          }
          case 50: {
            global::Coresdk.WorkflowCommands.CompleteWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CompleteWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CompleteWorkflowExecution) {
              subBuilder.MergeFrom(CompleteWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CompleteWorkflowExecution = subBuilder;
            break;
          }
          case 58: {
            global::Coresdk.WorkflowCommands.FailWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.FailWorkflowExecution();
            if (variantCase_ == VariantOneofCase.FailWorkflowExecution) {
              subBuilder.MergeFrom(FailWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            FailWorkflowExecution = subBuilder;
            break;
          }
          case 66: {
            global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.ContinueAsNewWorkflowExecution();
            if (variantCase_ == VariantOneofCase.ContinueAsNewWorkflowExecution) {
              subBuilder.MergeFrom(ContinueAsNewWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            ContinueAsNewWorkflowExecution = subBuilder;
            break;
          }
          case 74: {
            global::Coresdk.WorkflowCommands.CancelWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CancelWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CancelWorkflowExecution) {
              subBuilder.MergeFrom(CancelWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CancelWorkflowExecution = subBuilder;
            break;
          }
          case 82: {
            global::Coresdk.WorkflowCommands.SetPatchMarker subBuilder = new global::Coresdk.WorkflowCommands.SetPatchMarker();
            if (variantCase_ == VariantOneofCase.SetPatchMarker) {
              subBuilder.MergeFrom(SetPatchMarker);
            }
            input.ReadMessage(subBuilder);
            SetPatchMarker = subBuilder;
            break;
          }
          case 90: {
            global::Coresdk.WorkflowCommands.StartChildWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.StartChildWorkflowExecution();
            if (variantCase_ == VariantOneofCase.StartChildWorkflowExecution) {
              subBuilder.MergeFrom(StartChildWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            StartChildWorkflowExecution = subBuilder;
            break;
          }
          case 98: {
            global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.CancelUnstartedChildWorkflowExecution();
            if (variantCase_ == VariantOneofCase.CancelUnstartedChildWorkflowExecution) {
              subBuilder.MergeFrom(CancelUnstartedChildWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            CancelUnstartedChildWorkflowExecution = subBuilder;
            break;
          }
          case 106: {
            global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelExternalWorkflowExecution();
            if (variantCase_ == VariantOneofCase.RequestCancelExternalWorkflowExecution) {
              subBuilder.MergeFrom(RequestCancelExternalWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            RequestCancelExternalWorkflowExecution = subBuilder;
            break;
          }
          case 114: {
            global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution subBuilder = new global::Coresdk.WorkflowCommands.SignalExternalWorkflowExecution();
            if (variantCase_ == VariantOneofCase.SignalExternalWorkflowExecution) {
              subBuilder.MergeFrom(SignalExternalWorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            SignalExternalWorkflowExecution = subBuilder;
            break;
          }
          case 122: {
            global::Coresdk.WorkflowCommands.CancelSignalWorkflow subBuilder = new global::Coresdk.WorkflowCommands.CancelSignalWorkflow();
            if (variantCase_ == VariantOneofCase.CancelSignalWorkflow) {
              subBuilder.MergeFrom(CancelSignalWorkflow);
            }
            input.ReadMessage(subBuilder);
            CancelSignalWorkflow = subBuilder;
            break;
          }
          case 130: {
            global::Coresdk.WorkflowCommands.ScheduleLocalActivity subBuilder = new global::Coresdk.WorkflowCommands.ScheduleLocalActivity();
            if (variantCase_ == VariantOneofCase.ScheduleLocalActivity) {
              subBuilder.MergeFrom(ScheduleLocalActivity);
            }
            input.ReadMessage(subBuilder);
            ScheduleLocalActivity = subBuilder;
            break;
          }
          case 138: {
            global::Coresdk.WorkflowCommands.RequestCancelLocalActivity subBuilder = new global::Coresdk.WorkflowCommands.RequestCancelLocalActivity();
            if (variantCase_ == VariantOneofCase.RequestCancelLocalActivity) {
              subBuilder.MergeFrom(RequestCancelLocalActivity);
            }
            input.ReadMessage(subBuilder);
            RequestCancelLocalActivity = subBuilder;
            break;
          }
          case 146: {
            global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes subBuilder = new global::Coresdk.WorkflowCommands.UpsertWorkflowSearchAttributes();
            if (variantCase_ == VariantOneofCase.UpsertWorkflowSearchAttributes) {
              subBuilder.MergeFrom(UpsertWorkflowSearchAttributes);
            }
            input.ReadMessage(subBuilder);
            UpsertWorkflowSearchAttributes = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StartTimer : pb::IMessage<StartTimer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartTimer> _parser = new pb::MessageParser<StartTimer>(() => new StartTimer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartTimer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartTimer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartTimer(StartTimer other) : this() {
      seq_ = other.seq_;
      startToFireTimeout_ = other.startToFireTimeout_ != null ? other.startToFireTimeout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartTimer Clone() {
      return new StartTimer(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "start_to_fire_timeout" field.</summary>
    public const int StartToFireTimeoutFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration startToFireTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration StartToFireTimeout {
      get { return startToFireTimeout_; }
      set {
        startToFireTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartTimer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartTimer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (!object.Equals(StartToFireTimeout, other.StartToFireTimeout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (startToFireTimeout_ != null) hash ^= StartToFireTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (startToFireTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartToFireTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (startToFireTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartToFireTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (startToFireTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartToFireTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartTimer other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.startToFireTimeout_ != null) {
        if (startToFireTimeout_ == null) {
          StartToFireTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StartToFireTimeout.MergeFrom(other.StartToFireTimeout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            if (startToFireTimeout_ == null) {
              StartToFireTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToFireTimeout);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            if (startToFireTimeout_ == null) {
              StartToFireTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToFireTimeout);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CancelTimer : pb::IMessage<CancelTimer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelTimer> _parser = new pb::MessageParser<CancelTimer>(() => new CancelTimer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelTimer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelTimer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelTimer(CancelTimer other) : this() {
      seq_ = other.seq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelTimer Clone() {
      return new CancelTimer(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number as passed to `StartTimer`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelTimer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelTimer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelTimer other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleActivity : pb::IMessage<ScheduleActivity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleActivity> _parser = new pb::MessageParser<ScheduleActivity>(() => new ScheduleActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActivity(ScheduleActivity other) : this() {
      seq_ = other.seq_;
      activityId_ = other.activityId_;
      activityType_ = other.activityType_;
      namespace_ = other.namespace_;
      taskQueue_ = other.taskQueue_;
      headers_ = other.headers_.Clone();
      arguments_ = other.arguments_.Clone();
      scheduleToCloseTimeout_ = other.scheduleToCloseTimeout_ != null ? other.scheduleToCloseTimeout_.Clone() : null;
      scheduleToStartTimeout_ = other.scheduleToStartTimeout_ != null ? other.scheduleToStartTimeout_.Clone() : null;
      startToCloseTimeout_ = other.startToCloseTimeout_ != null ? other.startToCloseTimeout_.Clone() : null;
      heartbeatTimeout_ = other.heartbeatTimeout_ != null ? other.heartbeatTimeout_.Clone() : null;
      retryPolicy_ = other.retryPolicy_ != null ? other.retryPolicy_.Clone() : null;
      cancellationType_ = other.cancellationType_;
      doNotEagerlyExecute_ = other.doNotEagerlyExecute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleActivity Clone() {
      return new ScheduleActivity(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 3;
    private string activityType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityType {
      get { return activityType_; }
      set {
        activityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 4;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_queue" field.</summary>
    public const int TaskQueueFieldNumber = 5;
    private string taskQueue_ = "";
    /// <summary>
    /// The name of the task queue to place this activity request in
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskQueue {
      get { return taskQueue_; }
      set {
        taskQueue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_headers_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 50);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> headers_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Temporal.Api.Common.V1.Payload> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(58, global::Temporal.Api.Common.V1.Payload.Parser);
    private readonly pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> arguments_ = new pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Arguments/input to the activity. Called "input" upstream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "schedule_to_close_timeout" field.</summary>
    public const int ScheduleToCloseTimeoutFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Duration scheduleToCloseTimeout_;
    /// <summary>
    //// Indicates how long the caller is willing to wait for an activity completion. Limits how long
    //// retries will be attempted. Either this or start_to_close_timeout_seconds must be specified.
    //// When not specified defaults to the workflow execution timeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration ScheduleToCloseTimeout {
      get { return scheduleToCloseTimeout_; }
      set {
        scheduleToCloseTimeout_ = value;
      }
    }

    /// <summary>Field number for the "schedule_to_start_timeout" field.</summary>
    public const int ScheduleToStartTimeoutFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration scheduleToStartTimeout_;
    /// <summary>
    //// Limits time an activity task can stay in a task queue before a worker picks it up. This
    //// timeout is always non retryable as all a retry would achieve is to put it back into the same
    //// queue. Defaults to schedule_to_close_timeout or workflow execution timeout if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration ScheduleToStartTimeout {
      get { return scheduleToStartTimeout_; }
      set {
        scheduleToStartTimeout_ = value;
      }
    }

    /// <summary>Field number for the "start_to_close_timeout" field.</summary>
    public const int StartToCloseTimeoutFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Duration startToCloseTimeout_;
    /// <summary>
    //// Maximum time an activity is allowed to execute after a pick up by a worker. This timeout is
    //// always retryable. Either this or schedule_to_close_timeout must be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration StartToCloseTimeout {
      get { return startToCloseTimeout_; }
      set {
        startToCloseTimeout_ = value;
      }
    }

    /// <summary>Field number for the "heartbeat_timeout" field.</summary>
    public const int HeartbeatTimeoutFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Duration heartbeatTimeout_;
    /// <summary>
    //// Maximum time allowed between successful worker heartbeats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration HeartbeatTimeout {
      get { return heartbeatTimeout_; }
      set {
        heartbeatTimeout_ = value;
      }
    }

    /// <summary>Field number for the "retry_policy" field.</summary>
    public const int RetryPolicyFieldNumber = 12;
    private global::Temporal.Api.Common.V1.RetryPolicy retryPolicy_;
    /// <summary>
    //// Activities are provided by a default retry policy controlled through the service dynamic
    //// configuration. Retries are happening up to schedule_to_close_timeout. To disable retries set
    //// retry_policy.maximum_attempts to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.RetryPolicy RetryPolicy {
      get { return retryPolicy_; }
      set {
        retryPolicy_ = value;
      }
    }

    /// <summary>Field number for the "cancellation_type" field.</summary>
    public const int CancellationTypeFieldNumber = 13;
    private global::Coresdk.WorkflowCommands.ActivityCancellationType cancellationType_ = global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel;
    /// <summary>
    //// Defines how the workflow will wait (or not) for cancellation of the activity to be confirmed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.ActivityCancellationType CancellationType {
      get { return cancellationType_; }
      set {
        cancellationType_ = value;
      }
    }

    /// <summary>Field number for the "do_not_eagerly_execute" field.</summary>
    public const int DoNotEagerlyExecuteFieldNumber = 14;
    private bool doNotEagerlyExecute_;
    /// <summary>
    //// If set, the worker will not tell the service that it can immediately start executing this
    //// activity. When unset/default, workers will always attempt to do so if activity execution
    //// slots are available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoNotEagerlyExecute {
      get { return doNotEagerlyExecute_; }
      set {
        doNotEagerlyExecute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (ActivityId != other.ActivityId) return false;
      if (ActivityType != other.ActivityType) return false;
      if (Namespace != other.Namespace) return false;
      if (TaskQueue != other.TaskQueue) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (!object.Equals(ScheduleToCloseTimeout, other.ScheduleToCloseTimeout)) return false;
      if (!object.Equals(ScheduleToStartTimeout, other.ScheduleToStartTimeout)) return false;
      if (!object.Equals(StartToCloseTimeout, other.StartToCloseTimeout)) return false;
      if (!object.Equals(HeartbeatTimeout, other.HeartbeatTimeout)) return false;
      if (!object.Equals(RetryPolicy, other.RetryPolicy)) return false;
      if (CancellationType != other.CancellationType) return false;
      if (DoNotEagerlyExecute != other.DoNotEagerlyExecute) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (ActivityType.Length != 0) hash ^= ActivityType.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (TaskQueue.Length != 0) hash ^= TaskQueue.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (scheduleToCloseTimeout_ != null) hash ^= ScheduleToCloseTimeout.GetHashCode();
      if (scheduleToStartTimeout_ != null) hash ^= ScheduleToStartTimeout.GetHashCode();
      if (startToCloseTimeout_ != null) hash ^= StartToCloseTimeout.GetHashCode();
      if (heartbeatTimeout_ != null) hash ^= HeartbeatTimeout.GetHashCode();
      if (retryPolicy_ != null) hash ^= RetryPolicy.GetHashCode();
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) hash ^= CancellationType.GetHashCode();
      if (DoNotEagerlyExecute != false) hash ^= DoNotEagerlyExecute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityId);
      }
      if (ActivityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityType);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Namespace);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TaskQueue);
      }
      headers_.WriteTo(output, _map_headers_codec);
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartToCloseTimeout);
      }
      if (heartbeatTimeout_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HeartbeatTimeout);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RetryPolicy);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CancellationType);
      }
      if (DoNotEagerlyExecute != false) {
        output.WriteRawTag(112);
        output.WriteBool(DoNotEagerlyExecute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityId);
      }
      if (ActivityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityType);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Namespace);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TaskQueue);
      }
      headers_.WriteTo(ref output, _map_headers_codec);
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartToCloseTimeout);
      }
      if (heartbeatTimeout_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HeartbeatTimeout);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RetryPolicy);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CancellationType);
      }
      if (DoNotEagerlyExecute != false) {
        output.WriteRawTag(112);
        output.WriteBool(DoNotEagerlyExecute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (ActivityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityType);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (TaskQueue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskQueue);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartToCloseTimeout);
      }
      if (heartbeatTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeartbeatTimeout);
      }
      if (retryPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryPolicy);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CancellationType);
      }
      if (DoNotEagerlyExecute != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleActivity other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ActivityType.Length != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.TaskQueue.Length != 0) {
        TaskQueue = other.TaskQueue;
      }
      headers_.Add(other.headers_);
      arguments_.Add(other.arguments_);
      if (other.scheduleToCloseTimeout_ != null) {
        if (scheduleToCloseTimeout_ == null) {
          ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ScheduleToCloseTimeout.MergeFrom(other.ScheduleToCloseTimeout);
      }
      if (other.scheduleToStartTimeout_ != null) {
        if (scheduleToStartTimeout_ == null) {
          ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ScheduleToStartTimeout.MergeFrom(other.ScheduleToStartTimeout);
      }
      if (other.startToCloseTimeout_ != null) {
        if (startToCloseTimeout_ == null) {
          StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StartToCloseTimeout.MergeFrom(other.StartToCloseTimeout);
      }
      if (other.heartbeatTimeout_ != null) {
        if (heartbeatTimeout_ == null) {
          HeartbeatTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        HeartbeatTimeout.MergeFrom(other.HeartbeatTimeout);
      }
      if (other.retryPolicy_ != null) {
        if (retryPolicy_ == null) {
          RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
        }
        RetryPolicy.MergeFrom(other.RetryPolicy);
      }
      if (other.CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        CancellationType = other.CancellationType;
      }
      if (other.DoNotEagerlyExecute != false) {
        DoNotEagerlyExecute = other.DoNotEagerlyExecute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivityId = input.ReadString();
            break;
          }
          case 26: {
            ActivityType = input.ReadString();
            break;
          }
          case 34: {
            Namespace = input.ReadString();
            break;
          }
          case 42: {
            TaskQueue = input.ReadString();
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 58: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 66: {
            if (scheduleToCloseTimeout_ == null) {
              ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToCloseTimeout);
            break;
          }
          case 74: {
            if (scheduleToStartTimeout_ == null) {
              ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToStartTimeout);
            break;
          }
          case 82: {
            if (startToCloseTimeout_ == null) {
              StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToCloseTimeout);
            break;
          }
          case 90: {
            if (heartbeatTimeout_ == null) {
              HeartbeatTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(HeartbeatTimeout);
            break;
          }
          case 98: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 104: {
            CancellationType = (global::Coresdk.WorkflowCommands.ActivityCancellationType) input.ReadEnum();
            break;
          }
          case 112: {
            DoNotEagerlyExecute = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivityId = input.ReadString();
            break;
          }
          case 26: {
            ActivityType = input.ReadString();
            break;
          }
          case 34: {
            Namespace = input.ReadString();
            break;
          }
          case 42: {
            TaskQueue = input.ReadString();
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(ref input, _map_headers_codec);
            break;
          }
          case 58: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
          case 66: {
            if (scheduleToCloseTimeout_ == null) {
              ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToCloseTimeout);
            break;
          }
          case 74: {
            if (scheduleToStartTimeout_ == null) {
              ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToStartTimeout);
            break;
          }
          case 82: {
            if (startToCloseTimeout_ == null) {
              StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToCloseTimeout);
            break;
          }
          case 90: {
            if (heartbeatTimeout_ == null) {
              HeartbeatTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(HeartbeatTimeout);
            break;
          }
          case 98: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 104: {
            CancellationType = (global::Coresdk.WorkflowCommands.ActivityCancellationType) input.ReadEnum();
            break;
          }
          case 112: {
            DoNotEagerlyExecute = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleLocalActivity : pb::IMessage<ScheduleLocalActivity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleLocalActivity> _parser = new pb::MessageParser<ScheduleLocalActivity>(() => new ScheduleLocalActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleLocalActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleLocalActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleLocalActivity(ScheduleLocalActivity other) : this() {
      seq_ = other.seq_;
      activityId_ = other.activityId_;
      activityType_ = other.activityType_;
      attempt_ = other.attempt_;
      originalScheduleTime_ = other.originalScheduleTime_ != null ? other.originalScheduleTime_.Clone() : null;
      headers_ = other.headers_.Clone();
      arguments_ = other.arguments_.Clone();
      scheduleToCloseTimeout_ = other.scheduleToCloseTimeout_ != null ? other.scheduleToCloseTimeout_.Clone() : null;
      scheduleToStartTimeout_ = other.scheduleToStartTimeout_ != null ? other.scheduleToStartTimeout_.Clone() : null;
      startToCloseTimeout_ = other.startToCloseTimeout_ != null ? other.startToCloseTimeout_.Clone() : null;
      retryPolicy_ = other.retryPolicy_ != null ? other.retryPolicy_.Clone() : null;
      localRetryThreshold_ = other.localRetryThreshold_ != null ? other.localRetryThreshold_.Clone() : null;
      cancellationType_ = other.cancellationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleLocalActivity Clone() {
      return new ScheduleLocalActivity(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 3;
    private string activityType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityType {
      get { return activityType_; }
      set {
        activityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attempt" field.</summary>
    public const int AttemptFieldNumber = 4;
    private uint attempt_;
    /// <summary>
    //// Local activities can start with a non-1 attempt, if lang has been told to backoff using
    //// a timer before retrying. It should pass the attempt number from a `DoBackoff` activity
    //// resolution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Attempt {
      get { return attempt_; }
      set {
        attempt_ = value;
      }
    }

    /// <summary>Field number for the "original_schedule_time" field.</summary>
    public const int OriginalScheduleTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalScheduleTime_;
    /// <summary>
    //// If this local activity is a retry (as per the attempt field) this needs to be the original
    //// scheduling time (as provided in `DoBackoff`)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalScheduleTime {
      get { return originalScheduleTime_; }
      set {
        originalScheduleTime_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_headers_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 50);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> headers_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Temporal.Api.Common.V1.Payload> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(58, global::Temporal.Api.Common.V1.Payload.Parser);
    private readonly pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> arguments_ = new pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Arguments/input to the activity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "schedule_to_close_timeout" field.</summary>
    public const int ScheduleToCloseTimeoutFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Duration scheduleToCloseTimeout_;
    /// <summary>
    //// Indicates how long the caller is willing to wait for local activity completion. Limits how
    //// long retries will be attempted. When not specified defaults to the workflow execution
    //// timeout (which may be unset).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration ScheduleToCloseTimeout {
      get { return scheduleToCloseTimeout_; }
      set {
        scheduleToCloseTimeout_ = value;
      }
    }

    /// <summary>Field number for the "schedule_to_start_timeout" field.</summary>
    public const int ScheduleToStartTimeoutFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration scheduleToStartTimeout_;
    /// <summary>
    //// Limits time the local activity can idle internally before being executed. That can happen if
    //// the worker is currently at max concurrent local activity executions. This timeout is always
    //// non retryable as all a retry would achieve is to put it back into the same queue. Defaults
    //// to `schedule_to_close_timeout` if not specified and that is set. Must be &lt;=
    //// `schedule_to_close_timeout` when set, otherwise, it will be clamped down.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration ScheduleToStartTimeout {
      get { return scheduleToStartTimeout_; }
      set {
        scheduleToStartTimeout_ = value;
      }
    }

    /// <summary>Field number for the "start_to_close_timeout" field.</summary>
    public const int StartToCloseTimeoutFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Duration startToCloseTimeout_;
    /// <summary>
    //// Maximum time the local activity is allowed to execute after the task is dispatched. This
    //// timeout is always retryable. Either or both of `schedule_to_close_timeout` and this must be
    //// specified. If set, this must be &lt;= `schedule_to_close_timeout`, otherwise, it will be
    //// clamped down.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration StartToCloseTimeout {
      get { return startToCloseTimeout_; }
      set {
        startToCloseTimeout_ = value;
      }
    }

    /// <summary>Field number for the "retry_policy" field.</summary>
    public const int RetryPolicyFieldNumber = 11;
    private global::Temporal.Api.Common.V1.RetryPolicy retryPolicy_;
    /// <summary>
    //// Specify a retry policy for the local activity. By default local activities will be retried
    //// indefinitely.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.RetryPolicy RetryPolicy {
      get { return retryPolicy_; }
      set {
        retryPolicy_ = value;
      }
    }

    /// <summary>Field number for the "local_retry_threshold" field.</summary>
    public const int LocalRetryThresholdFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Duration localRetryThreshold_;
    /// <summary>
    //// If the activity is retrying and backoff would exceed this value, lang will be told to
    //// schedule a timer and retry the activity after. Otherwise, backoff will happen internally in
    //// core. Defaults to 1 minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration LocalRetryThreshold {
      get { return localRetryThreshold_; }
      set {
        localRetryThreshold_ = value;
      }
    }

    /// <summary>Field number for the "cancellation_type" field.</summary>
    public const int CancellationTypeFieldNumber = 13;
    private global::Coresdk.WorkflowCommands.ActivityCancellationType cancellationType_ = global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel;
    /// <summary>
    //// Defines how the workflow will wait (or not) for cancellation of the activity to be
    //// confirmed. Lang should default this to `WAIT_CANCELLATION_COMPLETED`, even though proto
    //// will default to `TRY_CANCEL` automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.ActivityCancellationType CancellationType {
      get { return cancellationType_; }
      set {
        cancellationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleLocalActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleLocalActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (ActivityId != other.ActivityId) return false;
      if (ActivityType != other.ActivityType) return false;
      if (Attempt != other.Attempt) return false;
      if (!object.Equals(OriginalScheduleTime, other.OriginalScheduleTime)) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (!object.Equals(ScheduleToCloseTimeout, other.ScheduleToCloseTimeout)) return false;
      if (!object.Equals(ScheduleToStartTimeout, other.ScheduleToStartTimeout)) return false;
      if (!object.Equals(StartToCloseTimeout, other.StartToCloseTimeout)) return false;
      if (!object.Equals(RetryPolicy, other.RetryPolicy)) return false;
      if (!object.Equals(LocalRetryThreshold, other.LocalRetryThreshold)) return false;
      if (CancellationType != other.CancellationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (ActivityType.Length != 0) hash ^= ActivityType.GetHashCode();
      if (Attempt != 0) hash ^= Attempt.GetHashCode();
      if (originalScheduleTime_ != null) hash ^= OriginalScheduleTime.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (scheduleToCloseTimeout_ != null) hash ^= ScheduleToCloseTimeout.GetHashCode();
      if (scheduleToStartTimeout_ != null) hash ^= ScheduleToStartTimeout.GetHashCode();
      if (startToCloseTimeout_ != null) hash ^= StartToCloseTimeout.GetHashCode();
      if (retryPolicy_ != null) hash ^= RetryPolicy.GetHashCode();
      if (localRetryThreshold_ != null) hash ^= LocalRetryThreshold.GetHashCode();
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) hash ^= CancellationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityId);
      }
      if (ActivityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityType);
      }
      if (Attempt != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Attempt);
      }
      if (originalScheduleTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OriginalScheduleTime);
      }
      headers_.WriteTo(output, _map_headers_codec);
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartToCloseTimeout);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RetryPolicy);
      }
      if (localRetryThreshold_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LocalRetryThreshold);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CancellationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityId);
      }
      if (ActivityType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityType);
      }
      if (Attempt != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Attempt);
      }
      if (originalScheduleTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OriginalScheduleTime);
      }
      headers_.WriteTo(ref output, _map_headers_codec);
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartToCloseTimeout);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RetryPolicy);
      }
      if (localRetryThreshold_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LocalRetryThreshold);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        output.WriteRawTag(104);
        output.WriteEnum((int) CancellationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (ActivityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityType);
      }
      if (Attempt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Attempt);
      }
      if (originalScheduleTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalScheduleTime);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (scheduleToCloseTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleToCloseTimeout);
      }
      if (scheduleToStartTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleToStartTimeout);
      }
      if (startToCloseTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartToCloseTimeout);
      }
      if (retryPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryPolicy);
      }
      if (localRetryThreshold_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalRetryThreshold);
      }
      if (CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CancellationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleLocalActivity other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ActivityType.Length != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.Attempt != 0) {
        Attempt = other.Attempt;
      }
      if (other.originalScheduleTime_ != null) {
        if (originalScheduleTime_ == null) {
          OriginalScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalScheduleTime.MergeFrom(other.OriginalScheduleTime);
      }
      headers_.Add(other.headers_);
      arguments_.Add(other.arguments_);
      if (other.scheduleToCloseTimeout_ != null) {
        if (scheduleToCloseTimeout_ == null) {
          ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ScheduleToCloseTimeout.MergeFrom(other.ScheduleToCloseTimeout);
      }
      if (other.scheduleToStartTimeout_ != null) {
        if (scheduleToStartTimeout_ == null) {
          ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ScheduleToStartTimeout.MergeFrom(other.ScheduleToStartTimeout);
      }
      if (other.startToCloseTimeout_ != null) {
        if (startToCloseTimeout_ == null) {
          StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StartToCloseTimeout.MergeFrom(other.StartToCloseTimeout);
      }
      if (other.retryPolicy_ != null) {
        if (retryPolicy_ == null) {
          RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
        }
        RetryPolicy.MergeFrom(other.RetryPolicy);
      }
      if (other.localRetryThreshold_ != null) {
        if (localRetryThreshold_ == null) {
          LocalRetryThreshold = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        LocalRetryThreshold.MergeFrom(other.LocalRetryThreshold);
      }
      if (other.CancellationType != global::Coresdk.WorkflowCommands.ActivityCancellationType.TryCancel) {
        CancellationType = other.CancellationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivityId = input.ReadString();
            break;
          }
          case 26: {
            ActivityType = input.ReadString();
            break;
          }
          case 32: {
            Attempt = input.ReadUInt32();
            break;
          }
          case 42: {
            if (originalScheduleTime_ == null) {
              OriginalScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalScheduleTime);
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 58: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 66: {
            if (scheduleToCloseTimeout_ == null) {
              ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToCloseTimeout);
            break;
          }
          case 74: {
            if (scheduleToStartTimeout_ == null) {
              ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToStartTimeout);
            break;
          }
          case 82: {
            if (startToCloseTimeout_ == null) {
              StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToCloseTimeout);
            break;
          }
          case 90: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 98: {
            if (localRetryThreshold_ == null) {
              LocalRetryThreshold = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(LocalRetryThreshold);
            break;
          }
          case 104: {
            CancellationType = (global::Coresdk.WorkflowCommands.ActivityCancellationType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            ActivityId = input.ReadString();
            break;
          }
          case 26: {
            ActivityType = input.ReadString();
            break;
          }
          case 32: {
            Attempt = input.ReadUInt32();
            break;
          }
          case 42: {
            if (originalScheduleTime_ == null) {
              OriginalScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalScheduleTime);
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(ref input, _map_headers_codec);
            break;
          }
          case 58: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
          case 66: {
            if (scheduleToCloseTimeout_ == null) {
              ScheduleToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToCloseTimeout);
            break;
          }
          case 74: {
            if (scheduleToStartTimeout_ == null) {
              ScheduleToStartTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ScheduleToStartTimeout);
            break;
          }
          case 82: {
            if (startToCloseTimeout_ == null) {
              StartToCloseTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StartToCloseTimeout);
            break;
          }
          case 90: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 98: {
            if (localRetryThreshold_ == null) {
              LocalRetryThreshold = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(LocalRetryThreshold);
            break;
          }
          case 104: {
            CancellationType = (global::Coresdk.WorkflowCommands.ActivityCancellationType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RequestCancelActivity : pb::IMessage<RequestCancelActivity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestCancelActivity> _parser = new pb::MessageParser<RequestCancelActivity>(() => new RequestCancelActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestCancelActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelActivity(RequestCancelActivity other) : this() {
      seq_ = other.seq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelActivity Clone() {
      return new RequestCancelActivity(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number as passed to `ScheduleActivity`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestCancelActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestCancelActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestCancelActivity other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RequestCancelLocalActivity : pb::IMessage<RequestCancelLocalActivity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestCancelLocalActivity> _parser = new pb::MessageParser<RequestCancelLocalActivity>(() => new RequestCancelLocalActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestCancelLocalActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelLocalActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelLocalActivity(RequestCancelLocalActivity other) : this() {
      seq_ = other.seq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelLocalActivity Clone() {
      return new RequestCancelLocalActivity(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number as passed to `ScheduleLocalActivity`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestCancelLocalActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestCancelLocalActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestCancelLocalActivity other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryResult : pb::IMessage<QueryResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryResult> _parser = new pb::MessageParser<QueryResult>(() => new QueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryResult(QueryResult other) : this() {
      queryId_ = other.queryId_;
      switch (other.VariantCase) {
        case VariantOneofCase.Succeeded:
          Succeeded = other.Succeeded.Clone();
          break;
        case VariantOneofCase.Failed:
          Failed = other.Failed.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryResult Clone() {
      return new QueryResult(this);
    }

    /// <summary>Field number for the "query_id" field.</summary>
    public const int QueryIdFieldNumber = 1;
    private string queryId_ = "";
    /// <summary>
    //// Corresponds to the id provided in the activation job
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QueryId {
      get { return queryId_; }
      set {
        queryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "succeeded" field.</summary>
    public const int SucceededFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.WorkflowCommands.QuerySuccess Succeeded {
      get { return variantCase_ == VariantOneofCase.Succeeded ? (global::Coresdk.WorkflowCommands.QuerySuccess) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.Succeeded;
      }
    }

    /// <summary>Field number for the "failed" field.</summary>
    public const int FailedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Failure.V1.Failure Failed {
      get { return variantCase_ == VariantOneofCase.Failed ? (global::Temporal.Api.Failure.V1.Failure) variant_ : null; }
      set {
        variant_ = value;
        variantCase_ = value == null ? VariantOneofCase.None : VariantOneofCase.Failed;
      }
    }

    private object variant_;
    /// <summary>Enum of possible cases for the "variant" oneof.</summary>
    public enum VariantOneofCase {
      None = 0,
      Succeeded = 2,
      Failed = 3,
    }
    private VariantOneofCase variantCase_ = VariantOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariantOneofCase VariantCase {
      get { return variantCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVariant() {
      variantCase_ = VariantOneofCase.None;
      variant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueryId != other.QueryId) return false;
      if (!object.Equals(Succeeded, other.Succeeded)) return false;
      if (!object.Equals(Failed, other.Failed)) return false;
      if (VariantCase != other.VariantCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QueryId.Length != 0) hash ^= QueryId.GetHashCode();
      if (variantCase_ == VariantOneofCase.Succeeded) hash ^= Succeeded.GetHashCode();
      if (variantCase_ == VariantOneofCase.Failed) hash ^= Failed.GetHashCode();
      hash ^= (int) variantCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QueryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryId);
      }
      if (variantCase_ == VariantOneofCase.Succeeded) {
        output.WriteRawTag(18);
        output.WriteMessage(Succeeded);
      }
      if (variantCase_ == VariantOneofCase.Failed) {
        output.WriteRawTag(26);
        output.WriteMessage(Failed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QueryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryId);
      }
      if (variantCase_ == VariantOneofCase.Succeeded) {
        output.WriteRawTag(18);
        output.WriteMessage(Succeeded);
      }
      if (variantCase_ == VariantOneofCase.Failed) {
        output.WriteRawTag(26);
        output.WriteMessage(Failed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QueryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryId);
      }
      if (variantCase_ == VariantOneofCase.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Succeeded);
      }
      if (variantCase_ == VariantOneofCase.Failed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryResult other) {
      if (other == null) {
        return;
      }
      if (other.QueryId.Length != 0) {
        QueryId = other.QueryId;
      }
      switch (other.VariantCase) {
        case VariantOneofCase.Succeeded:
          if (Succeeded == null) {
            Succeeded = new global::Coresdk.WorkflowCommands.QuerySuccess();
          }
          Succeeded.MergeFrom(other.Succeeded);
          break;
        case VariantOneofCase.Failed:
          if (Failed == null) {
            Failed = new global::Temporal.Api.Failure.V1.Failure();
          }
          Failed.MergeFrom(other.Failed);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueryId = input.ReadString();
            break;
          }
          case 18: {
            global::Coresdk.WorkflowCommands.QuerySuccess subBuilder = new global::Coresdk.WorkflowCommands.QuerySuccess();
            if (variantCase_ == VariantOneofCase.Succeeded) {
              subBuilder.MergeFrom(Succeeded);
            }
            input.ReadMessage(subBuilder);
            Succeeded = subBuilder;
            break;
          }
          case 26: {
            global::Temporal.Api.Failure.V1.Failure subBuilder = new global::Temporal.Api.Failure.V1.Failure();
            if (variantCase_ == VariantOneofCase.Failed) {
              subBuilder.MergeFrom(Failed);
            }
            input.ReadMessage(subBuilder);
            Failed = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            QueryId = input.ReadString();
            break;
          }
          case 18: {
            global::Coresdk.WorkflowCommands.QuerySuccess subBuilder = new global::Coresdk.WorkflowCommands.QuerySuccess();
            if (variantCase_ == VariantOneofCase.Succeeded) {
              subBuilder.MergeFrom(Succeeded);
            }
            input.ReadMessage(subBuilder);
            Succeeded = subBuilder;
            break;
          }
          case 26: {
            global::Temporal.Api.Failure.V1.Failure subBuilder = new global::Temporal.Api.Failure.V1.Failure();
            if (variantCase_ == VariantOneofCase.Failed) {
              subBuilder.MergeFrom(Failed);
            }
            input.ReadMessage(subBuilder);
            Failed = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuerySuccess : pb::IMessage<QuerySuccess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuerySuccess> _parser = new pb::MessageParser<QuerySuccess>(() => new QuerySuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuerySuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuerySuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuerySuccess(QuerySuccess other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuerySuccess Clone() {
      return new QuerySuccess(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::Temporal.Api.Common.V1.Payload response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.Payload Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuerySuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuerySuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuerySuccess other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Temporal.Api.Common.V1.Payload();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Temporal.Api.Common.V1.Payload();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Temporal.Api.Common.V1.Payload();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Issued when the workflow completes successfully
  /// </summary>
  public sealed partial class CompleteWorkflowExecution : pb::IMessage<CompleteWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompleteWorkflowExecution> _parser = new pb::MessageParser<CompleteWorkflowExecution>(() => new CompleteWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompleteWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteWorkflowExecution(CompleteWorkflowExecution other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteWorkflowExecution Clone() {
      return new CompleteWorkflowExecution(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Temporal.Api.Common.V1.Payload result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.Payload Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompleteWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompleteWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompleteWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Temporal.Api.Common.V1.Payload();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Temporal.Api.Common.V1.Payload();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Temporal.Api.Common.V1.Payload();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Issued when the workflow errors out
  /// </summary>
  public sealed partial class FailWorkflowExecution : pb::IMessage<FailWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FailWorkflowExecution> _parser = new pb::MessageParser<FailWorkflowExecution>(() => new FailWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FailWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailWorkflowExecution(FailWorkflowExecution other) : this() {
      failure_ = other.failure_ != null ? other.failure_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailWorkflowExecution Clone() {
      return new FailWorkflowExecution(this);
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 1;
    private global::Temporal.Api.Failure.V1.Failure failure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Failure.V1.Failure Failure {
      get { return failure_; }
      set {
        failure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FailWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FailWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Failure, other.Failure)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (failure_ != null) hash ^= Failure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (failure_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Failure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (failure_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Failure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (failure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FailWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.failure_ != null) {
        if (failure_ == null) {
          Failure = new global::Temporal.Api.Failure.V1.Failure();
        }
        Failure.MergeFrom(other.Failure);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (failure_ == null) {
              Failure = new global::Temporal.Api.Failure.V1.Failure();
            }
            input.ReadMessage(Failure);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (failure_ == null) {
              Failure = new global::Temporal.Api.Failure.V1.Failure();
            }
            input.ReadMessage(Failure);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Continue the workflow as a new execution
  /// </summary>
  public sealed partial class ContinueAsNewWorkflowExecution : pb::IMessage<ContinueAsNewWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContinueAsNewWorkflowExecution> _parser = new pb::MessageParser<ContinueAsNewWorkflowExecution>(() => new ContinueAsNewWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContinueAsNewWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContinueAsNewWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContinueAsNewWorkflowExecution(ContinueAsNewWorkflowExecution other) : this() {
      workflowType_ = other.workflowType_;
      taskQueue_ = other.taskQueue_;
      arguments_ = other.arguments_.Clone();
      workflowRunTimeout_ = other.workflowRunTimeout_ != null ? other.workflowRunTimeout_.Clone() : null;
      workflowTaskTimeout_ = other.workflowTaskTimeout_ != null ? other.workflowTaskTimeout_.Clone() : null;
      memo_ = other.memo_.Clone();
      headers_ = other.headers_.Clone();
      searchAttributes_ = other.searchAttributes_.Clone();
      retryPolicy_ = other.retryPolicy_ != null ? other.retryPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContinueAsNewWorkflowExecution Clone() {
      return new ContinueAsNewWorkflowExecution(this);
    }

    /// <summary>Field number for the "workflow_type" field.</summary>
    public const int WorkflowTypeFieldNumber = 1;
    private string workflowType_ = "";
    /// <summary>
    /// The identifier the lang-specific sdk uses to execute workflow code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkflowType {
      get { return workflowType_; }
      set {
        workflowType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_queue" field.</summary>
    public const int TaskQueueFieldNumber = 2;
    private string taskQueue_ = "";
    /// <summary>
    /// Task queue for the new workflow execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskQueue {
      get { return taskQueue_; }
      set {
        taskQueue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Temporal.Api.Common.V1.Payload> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(26, global::Temporal.Api.Common.V1.Payload.Parser);
    private readonly pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> arguments_ = new pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    /// Inputs to the workflow code. Should be specified. Will not re-use old arguments, as that
    /// typically wouldn't make any sense.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "workflow_run_timeout" field.</summary>
    public const int WorkflowRunTimeoutFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration workflowRunTimeout_;
    /// <summary>
    /// Timeout for a single run of the new workflow. Will not re-use current workflow's value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WorkflowRunTimeout {
      get { return workflowRunTimeout_; }
      set {
        workflowRunTimeout_ = value;
      }
    }

    /// <summary>Field number for the "workflow_task_timeout" field.</summary>
    public const int WorkflowTaskTimeoutFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration workflowTaskTimeout_;
    /// <summary>
    /// Timeout of a single workflow task. Will not re-use current workflow's value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WorkflowTaskTimeout {
      get { return workflowTaskTimeout_; }
      set {
        workflowTaskTimeout_ = value;
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_memo_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 50);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> memo_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    /// If set, the new workflow will have this memo. If unset, re-uses the current workflow's memo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Memo {
      get { return memo_; }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_headers_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 58);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> headers_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    /// If set, the new workflow will have these headers. Will *not* re-use current workflow's
    /// headers otherwise.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "search_attributes" field.</summary>
    public const int SearchAttributesFieldNumber = 8;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_searchAttributes_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 66);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> searchAttributes_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    /// If set, the new workflow will have these search attributes. If unset, re-uses the current
    /// workflow's search attributes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> SearchAttributes {
      get { return searchAttributes_; }
    }

    /// <summary>Field number for the "retry_policy" field.</summary>
    public const int RetryPolicyFieldNumber = 9;
    private global::Temporal.Api.Common.V1.RetryPolicy retryPolicy_;
    /// <summary>
    /// If set, the new workflow will have this retry policy. If unset, re-uses the current
    /// workflow's retry policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.RetryPolicy RetryPolicy {
      get { return retryPolicy_; }
      set {
        retryPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContinueAsNewWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContinueAsNewWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkflowType != other.WorkflowType) return false;
      if (TaskQueue != other.TaskQueue) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (!object.Equals(WorkflowRunTimeout, other.WorkflowRunTimeout)) return false;
      if (!object.Equals(WorkflowTaskTimeout, other.WorkflowTaskTimeout)) return false;
      if (!Memo.Equals(other.Memo)) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (!SearchAttributes.Equals(other.SearchAttributes)) return false;
      if (!object.Equals(RetryPolicy, other.RetryPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkflowType.Length != 0) hash ^= WorkflowType.GetHashCode();
      if (TaskQueue.Length != 0) hash ^= TaskQueue.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (workflowRunTimeout_ != null) hash ^= WorkflowRunTimeout.GetHashCode();
      if (workflowTaskTimeout_ != null) hash ^= WorkflowTaskTimeout.GetHashCode();
      hash ^= Memo.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= SearchAttributes.GetHashCode();
      if (retryPolicy_ != null) hash ^= RetryPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WorkflowType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskQueue);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (workflowRunTimeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WorkflowTaskTimeout);
      }
      memo_.WriteTo(output, _map_memo_codec);
      headers_.WriteTo(output, _map_headers_codec);
      searchAttributes_.WriteTo(output, _map_searchAttributes_codec);
      if (retryPolicy_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RetryPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WorkflowType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskQueue);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (workflowRunTimeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WorkflowTaskTimeout);
      }
      memo_.WriteTo(ref output, _map_memo_codec);
      headers_.WriteTo(ref output, _map_headers_codec);
      searchAttributes_.WriteTo(ref output, _map_searchAttributes_codec);
      if (retryPolicy_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RetryPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WorkflowType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskQueue);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (workflowRunTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowTaskTimeout);
      }
      size += memo_.CalculateSize(_map_memo_codec);
      size += headers_.CalculateSize(_map_headers_codec);
      size += searchAttributes_.CalculateSize(_map_searchAttributes_codec);
      if (retryPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContinueAsNewWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.WorkflowType.Length != 0) {
        WorkflowType = other.WorkflowType;
      }
      if (other.TaskQueue.Length != 0) {
        TaskQueue = other.TaskQueue;
      }
      arguments_.Add(other.arguments_);
      if (other.workflowRunTimeout_ != null) {
        if (workflowRunTimeout_ == null) {
          WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WorkflowRunTimeout.MergeFrom(other.WorkflowRunTimeout);
      }
      if (other.workflowTaskTimeout_ != null) {
        if (workflowTaskTimeout_ == null) {
          WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WorkflowTaskTimeout.MergeFrom(other.WorkflowTaskTimeout);
      }
      memo_.Add(other.memo_);
      headers_.Add(other.headers_);
      searchAttributes_.Add(other.searchAttributes_);
      if (other.retryPolicy_ != null) {
        if (retryPolicy_ == null) {
          RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
        }
        RetryPolicy.MergeFrom(other.RetryPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorkflowType = input.ReadString();
            break;
          }
          case 18: {
            TaskQueue = input.ReadString();
            break;
          }
          case 26: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 34: {
            if (workflowRunTimeout_ == null) {
              WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowRunTimeout);
            break;
          }
          case 42: {
            if (workflowTaskTimeout_ == null) {
              WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowTaskTimeout);
            break;
          }
          case 50: {
            memo_.AddEntriesFrom(input, _map_memo_codec);
            break;
          }
          case 58: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 66: {
            searchAttributes_.AddEntriesFrom(input, _map_searchAttributes_codec);
            break;
          }
          case 74: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WorkflowType = input.ReadString();
            break;
          }
          case 18: {
            TaskQueue = input.ReadString();
            break;
          }
          case 26: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
          case 34: {
            if (workflowRunTimeout_ == null) {
              WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowRunTimeout);
            break;
          }
          case 42: {
            if (workflowTaskTimeout_ == null) {
              WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowTaskTimeout);
            break;
          }
          case 50: {
            memo_.AddEntriesFrom(ref input, _map_memo_codec);
            break;
          }
          case 58: {
            headers_.AddEntriesFrom(ref input, _map_headers_codec);
            break;
          }
          case 66: {
            searchAttributes_.AddEntriesFrom(ref input, _map_searchAttributes_codec);
            break;
          }
          case 74: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Indicate a workflow has completed as cancelled. Generally sent as a response to an activation
  //// containing a cancellation job.
  /// </summary>
  public sealed partial class CancelWorkflowExecution : pb::IMessage<CancelWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelWorkflowExecution> _parser = new pb::MessageParser<CancelWorkflowExecution>(() => new CancelWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelWorkflowExecution(CancelWorkflowExecution other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelWorkflowExecution Clone() {
      return new CancelWorkflowExecution(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelWorkflowExecution other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  //// A request to set/check if a certain patch is present or not
  /// </summary>
  public sealed partial class SetPatchMarker : pb::IMessage<SetPatchMarker>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPatchMarker> _parser = new pb::MessageParser<SetPatchMarker>(() => new SetPatchMarker());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetPatchMarker> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPatchMarker() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPatchMarker(SetPatchMarker other) : this() {
      patchId_ = other.patchId_;
      deprecated_ = other.deprecated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetPatchMarker Clone() {
      return new SetPatchMarker(this);
    }

    /// <summary>Field number for the "patch_id" field.</summary>
    public const int PatchIdFieldNumber = 1;
    private string patchId_ = "";
    /// <summary>
    /// A user-chosen identifier for this patch. If the same identifier is used in multiple places in
    /// the code, those places are considered to be versioned as one unit. IE: The check call will
    /// return the same result for all of them
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PatchId {
      get { return patchId_; }
      set {
        patchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deprecated" field.</summary>
    public const int DeprecatedFieldNumber = 2;
    private bool deprecated_;
    /// <summary>
    /// Can be set to true to indicate that branches using this change are being removed, and all
    /// future worker deployments will only have the "with change" code in them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deprecated {
      get { return deprecated_; }
      set {
        deprecated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetPatchMarker);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetPatchMarker other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PatchId != other.PatchId) return false;
      if (Deprecated != other.Deprecated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PatchId.Length != 0) hash ^= PatchId.GetHashCode();
      if (Deprecated != false) hash ^= Deprecated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PatchId);
      }
      if (Deprecated != false) {
        output.WriteRawTag(16);
        output.WriteBool(Deprecated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PatchId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PatchId);
      }
      if (Deprecated != false) {
        output.WriteRawTag(16);
        output.WriteBool(Deprecated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PatchId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PatchId);
      }
      if (Deprecated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetPatchMarker other) {
      if (other == null) {
        return;
      }
      if (other.PatchId.Length != 0) {
        PatchId = other.PatchId;
      }
      if (other.Deprecated != false) {
        Deprecated = other.Deprecated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PatchId = input.ReadString();
            break;
          }
          case 16: {
            Deprecated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PatchId = input.ReadString();
            break;
          }
          case 16: {
            Deprecated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Start a child workflow execution
  /// </summary>
  public sealed partial class StartChildWorkflowExecution : pb::IMessage<StartChildWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartChildWorkflowExecution> _parser = new pb::MessageParser<StartChildWorkflowExecution>(() => new StartChildWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartChildWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartChildWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartChildWorkflowExecution(StartChildWorkflowExecution other) : this() {
      seq_ = other.seq_;
      namespace_ = other.namespace_;
      workflowId_ = other.workflowId_;
      workflowType_ = other.workflowType_;
      taskQueue_ = other.taskQueue_;
      input_ = other.input_.Clone();
      workflowExecutionTimeout_ = other.workflowExecutionTimeout_ != null ? other.workflowExecutionTimeout_.Clone() : null;
      workflowRunTimeout_ = other.workflowRunTimeout_ != null ? other.workflowRunTimeout_.Clone() : null;
      workflowTaskTimeout_ = other.workflowTaskTimeout_ != null ? other.workflowTaskTimeout_.Clone() : null;
      parentClosePolicy_ = other.parentClosePolicy_;
      workflowIdReusePolicy_ = other.workflowIdReusePolicy_;
      retryPolicy_ = other.retryPolicy_ != null ? other.retryPolicy_.Clone() : null;
      cronSchedule_ = other.cronSchedule_;
      headers_ = other.headers_.Clone();
      memo_ = other.memo_.Clone();
      searchAttributes_ = other.searchAttributes_.Clone();
      cancellationType_ = other.cancellationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartChildWorkflowExecution Clone() {
      return new StartChildWorkflowExecution(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 2;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 3;
    private string workflowId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workflow_type" field.</summary>
    public const int WorkflowTypeFieldNumber = 4;
    private string workflowType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkflowType {
      get { return workflowType_; }
      set {
        workflowType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_queue" field.</summary>
    public const int TaskQueueFieldNumber = 5;
    private string taskQueue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskQueue {
      get { return taskQueue_; }
      set {
        taskQueue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Temporal.Api.Common.V1.Payload> _repeated_input_codec
        = pb::FieldCodec.ForMessage(50, global::Temporal.Api.Common.V1.Payload.Parser);
    private readonly pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> input_ = new pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> Input {
      get { return input_; }
    }

    /// <summary>Field number for the "workflow_execution_timeout" field.</summary>
    public const int WorkflowExecutionTimeoutFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration workflowExecutionTimeout_;
    /// <summary>
    //// Total workflow execution timeout including retries and continue as new.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WorkflowExecutionTimeout {
      get { return workflowExecutionTimeout_; }
      set {
        workflowExecutionTimeout_ = value;
      }
    }

    /// <summary>Field number for the "workflow_run_timeout" field.</summary>
    public const int WorkflowRunTimeoutFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Duration workflowRunTimeout_;
    /// <summary>
    //// Timeout of a single workflow run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WorkflowRunTimeout {
      get { return workflowRunTimeout_; }
      set {
        workflowRunTimeout_ = value;
      }
    }

    /// <summary>Field number for the "workflow_task_timeout" field.</summary>
    public const int WorkflowTaskTimeoutFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration workflowTaskTimeout_;
    /// <summary>
    //// Timeout of a single workflow task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration WorkflowTaskTimeout {
      get { return workflowTaskTimeout_; }
      set {
        workflowTaskTimeout_ = value;
      }
    }

    /// <summary>Field number for the "parent_close_policy" field.</summary>
    public const int ParentClosePolicyFieldNumber = 10;
    private global::Coresdk.ChildWorkflow.ParentClosePolicy parentClosePolicy_ = global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified;
    /// <summary>
    //// Default: PARENT_CLOSE_POLICY_TERMINATE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.ChildWorkflow.ParentClosePolicy ParentClosePolicy {
      get { return parentClosePolicy_; }
      set {
        parentClosePolicy_ = value;
      }
    }

    /// <summary>Field number for the "workflow_id_reuse_policy" field.</summary>
    public const int WorkflowIdReusePolicyFieldNumber = 12;
    private global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy workflowIdReusePolicy_ = global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified;
    /// <summary>
    /// string control = 11; (unused from StartChildWorkflowExecutionCommandAttributes)
    /// Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy WorkflowIdReusePolicy {
      get { return workflowIdReusePolicy_; }
      set {
        workflowIdReusePolicy_ = value;
      }
    }

    /// <summary>Field number for the "retry_policy" field.</summary>
    public const int RetryPolicyFieldNumber = 13;
    private global::Temporal.Api.Common.V1.RetryPolicy retryPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Temporal.Api.Common.V1.RetryPolicy RetryPolicy {
      get { return retryPolicy_; }
      set {
        retryPolicy_ = value;
      }
    }

    /// <summary>Field number for the "cron_schedule" field.</summary>
    public const int CronScheduleFieldNumber = 14;
    private string cronSchedule_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CronSchedule {
      get { return cronSchedule_; }
      set {
        cronSchedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 15;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_headers_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 122);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> headers_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Header fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 16;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_memo_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 130);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> memo_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Memo fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Memo {
      get { return memo_; }
    }

    /// <summary>Field number for the "search_attributes" field.</summary>
    public const int SearchAttributesFieldNumber = 17;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_searchAttributes_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 138);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> searchAttributes_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Search attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> SearchAttributes {
      get { return searchAttributes_; }
    }

    /// <summary>Field number for the "cancellation_type" field.</summary>
    public const int CancellationTypeFieldNumber = 18;
    private global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType cancellationType_ = global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon;
    /// <summary>
    //// Defines behaviour of the underlying workflow when child workflow cancellation has been requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType CancellationType {
      get { return cancellationType_; }
      set {
        cancellationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartChildWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartChildWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (Namespace != other.Namespace) return false;
      if (WorkflowId != other.WorkflowId) return false;
      if (WorkflowType != other.WorkflowType) return false;
      if (TaskQueue != other.TaskQueue) return false;
      if(!input_.Equals(other.input_)) return false;
      if (!object.Equals(WorkflowExecutionTimeout, other.WorkflowExecutionTimeout)) return false;
      if (!object.Equals(WorkflowRunTimeout, other.WorkflowRunTimeout)) return false;
      if (!object.Equals(WorkflowTaskTimeout, other.WorkflowTaskTimeout)) return false;
      if (ParentClosePolicy != other.ParentClosePolicy) return false;
      if (WorkflowIdReusePolicy != other.WorkflowIdReusePolicy) return false;
      if (!object.Equals(RetryPolicy, other.RetryPolicy)) return false;
      if (CronSchedule != other.CronSchedule) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (!Memo.Equals(other.Memo)) return false;
      if (!SearchAttributes.Equals(other.SearchAttributes)) return false;
      if (CancellationType != other.CancellationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      if (WorkflowType.Length != 0) hash ^= WorkflowType.GetHashCode();
      if (TaskQueue.Length != 0) hash ^= TaskQueue.GetHashCode();
      hash ^= input_.GetHashCode();
      if (workflowExecutionTimeout_ != null) hash ^= WorkflowExecutionTimeout.GetHashCode();
      if (workflowRunTimeout_ != null) hash ^= WorkflowRunTimeout.GetHashCode();
      if (workflowTaskTimeout_ != null) hash ^= WorkflowTaskTimeout.GetHashCode();
      if (ParentClosePolicy != global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified) hash ^= ParentClosePolicy.GetHashCode();
      if (WorkflowIdReusePolicy != global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified) hash ^= WorkflowIdReusePolicy.GetHashCode();
      if (retryPolicy_ != null) hash ^= RetryPolicy.GetHashCode();
      if (CronSchedule.Length != 0) hash ^= CronSchedule.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= Memo.GetHashCode();
      hash ^= SearchAttributes.GetHashCode();
      if (CancellationType != global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon) hash ^= CancellationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Namespace);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WorkflowId);
      }
      if (WorkflowType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TaskQueue);
      }
      input_.WriteTo(output, _repeated_input_codec);
      if (workflowExecutionTimeout_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WorkflowExecutionTimeout);
      }
      if (workflowRunTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(WorkflowTaskTimeout);
      }
      if (ParentClosePolicy != global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ParentClosePolicy);
      }
      if (WorkflowIdReusePolicy != global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) WorkflowIdReusePolicy);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RetryPolicy);
      }
      if (CronSchedule.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CronSchedule);
      }
      headers_.WriteTo(output, _map_headers_codec);
      memo_.WriteTo(output, _map_memo_codec);
      searchAttributes_.WriteTo(output, _map_searchAttributes_codec);
      if (CancellationType != global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) CancellationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Namespace);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WorkflowId);
      }
      if (WorkflowType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TaskQueue);
      }
      input_.WriteTo(ref output, _repeated_input_codec);
      if (workflowExecutionTimeout_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(WorkflowExecutionTimeout);
      }
      if (workflowRunTimeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(WorkflowTaskTimeout);
      }
      if (ParentClosePolicy != global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ParentClosePolicy);
      }
      if (WorkflowIdReusePolicy != global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) WorkflowIdReusePolicy);
      }
      if (retryPolicy_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RetryPolicy);
      }
      if (CronSchedule.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CronSchedule);
      }
      headers_.WriteTo(ref output, _map_headers_codec);
      memo_.WriteTo(ref output, _map_memo_codec);
      searchAttributes_.WriteTo(ref output, _map_searchAttributes_codec);
      if (CancellationType != global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) CancellationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      if (WorkflowType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowType);
      }
      if (TaskQueue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskQueue);
      }
      size += input_.CalculateSize(_repeated_input_codec);
      if (workflowExecutionTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowExecutionTimeout);
      }
      if (workflowRunTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowRunTimeout);
      }
      if (workflowTaskTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowTaskTimeout);
      }
      if (ParentClosePolicy != global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ParentClosePolicy);
      }
      if (WorkflowIdReusePolicy != global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WorkflowIdReusePolicy);
      }
      if (retryPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryPolicy);
      }
      if (CronSchedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CronSchedule);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      size += memo_.CalculateSize(_map_memo_codec);
      size += searchAttributes_.CalculateSize(_map_searchAttributes_codec);
      if (CancellationType != global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CancellationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartChildWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      if (other.WorkflowType.Length != 0) {
        WorkflowType = other.WorkflowType;
      }
      if (other.TaskQueue.Length != 0) {
        TaskQueue = other.TaskQueue;
      }
      input_.Add(other.input_);
      if (other.workflowExecutionTimeout_ != null) {
        if (workflowExecutionTimeout_ == null) {
          WorkflowExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WorkflowExecutionTimeout.MergeFrom(other.WorkflowExecutionTimeout);
      }
      if (other.workflowRunTimeout_ != null) {
        if (workflowRunTimeout_ == null) {
          WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WorkflowRunTimeout.MergeFrom(other.WorkflowRunTimeout);
      }
      if (other.workflowTaskTimeout_ != null) {
        if (workflowTaskTimeout_ == null) {
          WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WorkflowTaskTimeout.MergeFrom(other.WorkflowTaskTimeout);
      }
      if (other.ParentClosePolicy != global::Coresdk.ChildWorkflow.ParentClosePolicy.Unspecified) {
        ParentClosePolicy = other.ParentClosePolicy;
      }
      if (other.WorkflowIdReusePolicy != global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy.Unspecified) {
        WorkflowIdReusePolicy = other.WorkflowIdReusePolicy;
      }
      if (other.retryPolicy_ != null) {
        if (retryPolicy_ == null) {
          RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
        }
        RetryPolicy.MergeFrom(other.RetryPolicy);
      }
      if (other.CronSchedule.Length != 0) {
        CronSchedule = other.CronSchedule;
      }
      headers_.Add(other.headers_);
      memo_.Add(other.memo_);
      searchAttributes_.Add(other.searchAttributes_);
      if (other.CancellationType != global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType.Abandon) {
        CancellationType = other.CancellationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            Namespace = input.ReadString();
            break;
          }
          case 26: {
            WorkflowId = input.ReadString();
            break;
          }
          case 34: {
            WorkflowType = input.ReadString();
            break;
          }
          case 42: {
            TaskQueue = input.ReadString();
            break;
          }
          case 50: {
            input_.AddEntriesFrom(input, _repeated_input_codec);
            break;
          }
          case 58: {
            if (workflowExecutionTimeout_ == null) {
              WorkflowExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowExecutionTimeout);
            break;
          }
          case 66: {
            if (workflowRunTimeout_ == null) {
              WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowRunTimeout);
            break;
          }
          case 74: {
            if (workflowTaskTimeout_ == null) {
              WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowTaskTimeout);
            break;
          }
          case 80: {
            ParentClosePolicy = (global::Coresdk.ChildWorkflow.ParentClosePolicy) input.ReadEnum();
            break;
          }
          case 96: {
            WorkflowIdReusePolicy = (global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy) input.ReadEnum();
            break;
          }
          case 106: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 114: {
            CronSchedule = input.ReadString();
            break;
          }
          case 122: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 130: {
            memo_.AddEntriesFrom(input, _map_memo_codec);
            break;
          }
          case 138: {
            searchAttributes_.AddEntriesFrom(input, _map_searchAttributes_codec);
            break;
          }
          case 144: {
            CancellationType = (global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            Namespace = input.ReadString();
            break;
          }
          case 26: {
            WorkflowId = input.ReadString();
            break;
          }
          case 34: {
            WorkflowType = input.ReadString();
            break;
          }
          case 42: {
            TaskQueue = input.ReadString();
            break;
          }
          case 50: {
            input_.AddEntriesFrom(ref input, _repeated_input_codec);
            break;
          }
          case 58: {
            if (workflowExecutionTimeout_ == null) {
              WorkflowExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowExecutionTimeout);
            break;
          }
          case 66: {
            if (workflowRunTimeout_ == null) {
              WorkflowRunTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowRunTimeout);
            break;
          }
          case 74: {
            if (workflowTaskTimeout_ == null) {
              WorkflowTaskTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WorkflowTaskTimeout);
            break;
          }
          case 80: {
            ParentClosePolicy = (global::Coresdk.ChildWorkflow.ParentClosePolicy) input.ReadEnum();
            break;
          }
          case 96: {
            WorkflowIdReusePolicy = (global::Temporal.Api.Enums.V1.WorkflowIdReusePolicy) input.ReadEnum();
            break;
          }
          case 106: {
            if (retryPolicy_ == null) {
              RetryPolicy = new global::Temporal.Api.Common.V1.RetryPolicy();
            }
            input.ReadMessage(RetryPolicy);
            break;
          }
          case 114: {
            CronSchedule = input.ReadString();
            break;
          }
          case 122: {
            headers_.AddEntriesFrom(ref input, _map_headers_codec);
            break;
          }
          case 130: {
            memo_.AddEntriesFrom(ref input, _map_memo_codec);
            break;
          }
          case 138: {
            searchAttributes_.AddEntriesFrom(ref input, _map_searchAttributes_codec);
            break;
          }
          case 144: {
            CancellationType = (global::Coresdk.ChildWorkflow.ChildWorkflowCancellationType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Cancel a not-yet-started child workflow
  /// </summary>
  public sealed partial class CancelUnstartedChildWorkflowExecution : pb::IMessage<CancelUnstartedChildWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelUnstartedChildWorkflowExecution> _parser = new pb::MessageParser<CancelUnstartedChildWorkflowExecution>(() => new CancelUnstartedChildWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelUnstartedChildWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUnstartedChildWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUnstartedChildWorkflowExecution(CancelUnstartedChildWorkflowExecution other) : this() {
      childWorkflowSeq_ = other.childWorkflowSeq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUnstartedChildWorkflowExecution Clone() {
      return new CancelUnstartedChildWorkflowExecution(this);
    }

    /// <summary>Field number for the "child_workflow_seq" field.</summary>
    public const int ChildWorkflowSeqFieldNumber = 1;
    private uint childWorkflowSeq_;
    /// <summary>
    /// Sequence number as given to the `StartChildWorkflowExecution` command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChildWorkflowSeq {
      get { return childWorkflowSeq_; }
      set {
        childWorkflowSeq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelUnstartedChildWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelUnstartedChildWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChildWorkflowSeq != other.ChildWorkflowSeq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChildWorkflowSeq != 0) hash ^= ChildWorkflowSeq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChildWorkflowSeq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChildWorkflowSeq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChildWorkflowSeq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChildWorkflowSeq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChildWorkflowSeq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChildWorkflowSeq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelUnstartedChildWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.ChildWorkflowSeq != 0) {
        ChildWorkflowSeq = other.ChildWorkflowSeq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChildWorkflowSeq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChildWorkflowSeq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Request cancellation of an external workflow execution (which may be a started child)
  /// </summary>
  public sealed partial class RequestCancelExternalWorkflowExecution : pb::IMessage<RequestCancelExternalWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestCancelExternalWorkflowExecution> _parser = new pb::MessageParser<RequestCancelExternalWorkflowExecution>(() => new RequestCancelExternalWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestCancelExternalWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelExternalWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelExternalWorkflowExecution(RequestCancelExternalWorkflowExecution other) : this() {
      seq_ = other.seq_;
      switch (other.TargetCase) {
        case TargetOneofCase.WorkflowExecution:
          WorkflowExecution = other.WorkflowExecution.Clone();
          break;
        case TargetOneofCase.ChildWorkflowId:
          ChildWorkflowId = other.ChildWorkflowId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestCancelExternalWorkflowExecution Clone() {
      return new RequestCancelExternalWorkflowExecution(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "workflow_execution" field.</summary>
    public const int WorkflowExecutionFieldNumber = 2;
    /// <summary>
    /// A specific workflow instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.Common.NamespacedWorkflowExecution WorkflowExecution {
      get { return targetCase_ == TargetOneofCase.WorkflowExecution ? (global::Coresdk.Common.NamespacedWorkflowExecution) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.WorkflowExecution;
      }
    }

    /// <summary>Field number for the "child_workflow_id" field.</summary>
    public const int ChildWorkflowIdFieldNumber = 3;
    /// <summary>
    /// The desired target must be a child of the issuing workflow, and this is its workflow id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildWorkflowId {
      get { return targetCase_ == TargetOneofCase.ChildWorkflowId ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.ChildWorkflowId;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      WorkflowExecution = 2,
      ChildWorkflowId = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestCancelExternalWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestCancelExternalWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (!object.Equals(WorkflowExecution, other.WorkflowExecution)) return false;
      if (ChildWorkflowId != other.ChildWorkflowId) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (targetCase_ == TargetOneofCase.WorkflowExecution) hash ^= WorkflowExecution.GetHashCode();
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) hash ^= ChildWorkflowId.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        output.WriteRawTag(26);
        output.WriteString(ChildWorkflowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        output.WriteRawTag(26);
        output.WriteString(ChildWorkflowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildWorkflowId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestCancelExternalWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.WorkflowExecution:
          if (WorkflowExecution == null) {
            WorkflowExecution = new global::Coresdk.Common.NamespacedWorkflowExecution();
          }
          WorkflowExecution.MergeFrom(other.WorkflowExecution);
          break;
        case TargetOneofCase.ChildWorkflowId:
          ChildWorkflowId = other.ChildWorkflowId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Coresdk.Common.NamespacedWorkflowExecution subBuilder = new global::Coresdk.Common.NamespacedWorkflowExecution();
            if (targetCase_ == TargetOneofCase.WorkflowExecution) {
              subBuilder.MergeFrom(WorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            WorkflowExecution = subBuilder;
            break;
          }
          case 26: {
            ChildWorkflowId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Coresdk.Common.NamespacedWorkflowExecution subBuilder = new global::Coresdk.Common.NamespacedWorkflowExecution();
            if (targetCase_ == TargetOneofCase.WorkflowExecution) {
              subBuilder.MergeFrom(WorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            WorkflowExecution = subBuilder;
            break;
          }
          case 26: {
            ChildWorkflowId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Send a signal to an external or child workflow
  /// </summary>
  public sealed partial class SignalExternalWorkflowExecution : pb::IMessage<SignalExternalWorkflowExecution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignalExternalWorkflowExecution> _parser = new pb::MessageParser<SignalExternalWorkflowExecution>(() => new SignalExternalWorkflowExecution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignalExternalWorkflowExecution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalExternalWorkflowExecution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalExternalWorkflowExecution(SignalExternalWorkflowExecution other) : this() {
      seq_ = other.seq_;
      signalName_ = other.signalName_;
      args_ = other.args_.Clone();
      headers_ = other.headers_.Clone();
      switch (other.TargetCase) {
        case TargetOneofCase.WorkflowExecution:
          WorkflowExecution = other.WorkflowExecution.Clone();
          break;
        case TargetOneofCase.ChildWorkflowId:
          ChildWorkflowId = other.ChildWorkflowId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignalExternalWorkflowExecution Clone() {
      return new SignalExternalWorkflowExecution(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number, used as the operation identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "workflow_execution" field.</summary>
    public const int WorkflowExecutionFieldNumber = 2;
    /// <summary>
    /// A specific workflow instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Coresdk.Common.NamespacedWorkflowExecution WorkflowExecution {
      get { return targetCase_ == TargetOneofCase.WorkflowExecution ? (global::Coresdk.Common.NamespacedWorkflowExecution) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.WorkflowExecution;
      }
    }

    /// <summary>Field number for the "child_workflow_id" field.</summary>
    public const int ChildWorkflowIdFieldNumber = 3;
    /// <summary>
    /// The desired target must be a child of the issuing workflow, and this is its workflow id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChildWorkflowId {
      get { return targetCase_ == TargetOneofCase.ChildWorkflowId ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.ChildWorkflowId;
      }
    }

    /// <summary>Field number for the "signal_name" field.</summary>
    public const int SignalNameFieldNumber = 4;
    private string signalName_ = "";
    /// <summary>
    //// Name of the signal handler
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SignalName {
      get { return signalName_; }
      set {
        signalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Temporal.Api.Common.V1.Payload> _repeated_args_codec
        = pb::FieldCodec.ForMessage(42, global::Temporal.Api.Common.V1.Payload.Parser);
    private readonly pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> args_ = new pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Arguments for the handler
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Temporal.Api.Common.V1.Payload> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_headers_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 50);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> headers_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// Headers to attach to the signal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> Headers {
      get { return headers_; }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      WorkflowExecution = 2,
      ChildWorkflowId = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignalExternalWorkflowExecution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignalExternalWorkflowExecution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (!object.Equals(WorkflowExecution, other.WorkflowExecution)) return false;
      if (ChildWorkflowId != other.ChildWorkflowId) return false;
      if (SignalName != other.SignalName) return false;
      if(!args_.Equals(other.args_)) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (targetCase_ == TargetOneofCase.WorkflowExecution) hash ^= WorkflowExecution.GetHashCode();
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) hash ^= ChildWorkflowId.GetHashCode();
      if (SignalName.Length != 0) hash ^= SignalName.GetHashCode();
      hash ^= args_.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        output.WriteRawTag(26);
        output.WriteString(ChildWorkflowId);
      }
      if (SignalName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SignalName);
      }
      args_.WriteTo(output, _repeated_args_codec);
      headers_.WriteTo(output, _map_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        output.WriteRawTag(18);
        output.WriteMessage(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        output.WriteRawTag(26);
        output.WriteString(ChildWorkflowId);
      }
      if (SignalName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SignalName);
      }
      args_.WriteTo(ref output, _repeated_args_codec);
      headers_.WriteTo(ref output, _map_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (targetCase_ == TargetOneofCase.WorkflowExecution) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowExecution);
      }
      if (targetCase_ == TargetOneofCase.ChildWorkflowId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildWorkflowId);
      }
      if (SignalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignalName);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      size += headers_.CalculateSize(_map_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignalExternalWorkflowExecution other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.SignalName.Length != 0) {
        SignalName = other.SignalName;
      }
      args_.Add(other.args_);
      headers_.Add(other.headers_);
      switch (other.TargetCase) {
        case TargetOneofCase.WorkflowExecution:
          if (WorkflowExecution == null) {
            WorkflowExecution = new global::Coresdk.Common.NamespacedWorkflowExecution();
          }
          WorkflowExecution.MergeFrom(other.WorkflowExecution);
          break;
        case TargetOneofCase.ChildWorkflowId:
          ChildWorkflowId = other.ChildWorkflowId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Coresdk.Common.NamespacedWorkflowExecution subBuilder = new global::Coresdk.Common.NamespacedWorkflowExecution();
            if (targetCase_ == TargetOneofCase.WorkflowExecution) {
              subBuilder.MergeFrom(WorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            WorkflowExecution = subBuilder;
            break;
          }
          case 26: {
            ChildWorkflowId = input.ReadString();
            break;
          }
          case 34: {
            SignalName = input.ReadString();
            break;
          }
          case 42: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Coresdk.Common.NamespacedWorkflowExecution subBuilder = new global::Coresdk.Common.NamespacedWorkflowExecution();
            if (targetCase_ == TargetOneofCase.WorkflowExecution) {
              subBuilder.MergeFrom(WorkflowExecution);
            }
            input.ReadMessage(subBuilder);
            WorkflowExecution = subBuilder;
            break;
          }
          case 26: {
            ChildWorkflowId = input.ReadString();
            break;
          }
          case 34: {
            SignalName = input.ReadString();
            break;
          }
          case 42: {
            args_.AddEntriesFrom(ref input, _repeated_args_codec);
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(ref input, _map_headers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// Can be used to cancel not-already-sent `SignalExternalWorkflowExecution` commands
  /// </summary>
  public sealed partial class CancelSignalWorkflow : pb::IMessage<CancelSignalWorkflow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelSignalWorkflow> _parser = new pb::MessageParser<CancelSignalWorkflow>(() => new CancelSignalWorkflow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelSignalWorkflow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelSignalWorkflow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelSignalWorkflow(CancelSignalWorkflow other) : this() {
      seq_ = other.seq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelSignalWorkflow Clone() {
      return new CancelSignalWorkflow(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private uint seq_;
    /// <summary>
    //// Lang's incremental sequence number as passed to `SignalExternalWorkflowExecution`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelSignalWorkflow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelSignalWorkflow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seq != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelSignalWorkflow other) {
      if (other == null) {
        return;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpsertWorkflowSearchAttributes : pb::IMessage<UpsertWorkflowSearchAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpsertWorkflowSearchAttributes> _parser = new pb::MessageParser<UpsertWorkflowSearchAttributes>(() => new UpsertWorkflowSearchAttributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpsertWorkflowSearchAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Coresdk.WorkflowCommands.WorkflowCommandsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpsertWorkflowSearchAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpsertWorkflowSearchAttributes(UpsertWorkflowSearchAttributes other) : this() {
      searchAttributes_ = other.searchAttributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpsertWorkflowSearchAttributes Clone() {
      return new UpsertWorkflowSearchAttributes(this);
    }

    /// <summary>Field number for the "search_attributes" field.</summary>
    public const int SearchAttributesFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec _map_searchAttributes_codec
        = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Temporal.Api.Common.V1.Payload.Parser), 10);
    private readonly pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> searchAttributes_ = new pbc::MapField<string, global::Temporal.Api.Common.V1.Payload>();
    /// <summary>
    //// SearchAttributes fields - equivalent to indexed_fields on api. Key = search index, Value =
    //// value?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Temporal.Api.Common.V1.Payload> SearchAttributes {
      get { return searchAttributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpsertWorkflowSearchAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpsertWorkflowSearchAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SearchAttributes.Equals(other.SearchAttributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SearchAttributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      searchAttributes_.WriteTo(output, _map_searchAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      searchAttributes_.WriteTo(ref output, _map_searchAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += searchAttributes_.CalculateSize(_map_searchAttributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpsertWorkflowSearchAttributes other) {
      if (other == null) {
        return;
      }
      searchAttributes_.Add(other.searchAttributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            searchAttributes_.AddEntriesFrom(input, _map_searchAttributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            searchAttributes_.AddEntriesFrom(ref input, _map_searchAttributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
